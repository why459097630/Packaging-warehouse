plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // NDJC:PLUGINS_EXTRA         // ⬅ 额外 Gradle 插件（如 Hilt、KSP 等）
}

/** 可选签名（环境变量控制）
 *  NDJC_SIGNING_DISABLED=1            → 关闭签名
 *  NDJC_KEYSTORE_PATH/…（及口令）     → 开启签名
 */
def SIGNING_DISABLED = (System.getenv('NDJC_SIGNING_DISABLED') ?: '0') == '1'
def KEYSTORE_PATH    = System.getenv('NDJC_KEYSTORE_PATH')
def HAS_KEYSTORE     = (KEYSTORE_PATH != null && KEYSTORE_PATH.trim())

android {
    namespace "com.ndjc.app"          // NDJC:PACKAGE_NAME
    compileSdk 34                      // NDJC:COMPILE_SDK

    defaultConfig {
        applicationId "com.ndjc.app"  // NDJC:PACKAGE_NAME
        minSdk 24                      // NDJC:MIN_SDK
        targetSdk 34                   // NDJC:TARGET_SDK
        versionCode 1                  // NDJC:VERSION_CODE
        versionName "1.0.0"            // NDJC:VERSION_NAME

        // NDJC:RES_CONFIGS            // 例: resConfigs 'en', 'zh-CN', 'zh-TW'
        // NDJC:NDK_ABI_FILTERS        // 例: ndk { abiFilters 'arm64-v8a', 'armeabi-v7a' }
        // NDJC:MANIFEST_PLACEHOLDERS  // 例: manifestPlaceholders = [appAuthRedirectScheme: 'ndjc-demo']
    }

    signingConfigs {
        release {
            if (!SIGNING_DISABLED && HAS_KEYSTORE) {
                storeFile     file(KEYSTORE_PATH)
                storePassword (System.getenv('NDJC_KEYSTORE_PASSWORD') ?: '')
                keyAlias      (System.getenv('NDJC_KEY_ALIAS')          ?: '')
                keyPassword   (System.getenv('NDJC_KEY_PASSWORD')       ?: '')
            }
            // NDJC:SIGNING_CONFIG_EXTRA
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // NDJC:PROGUARD_FILES_EXTRA   // 例: 追加自定义 proguard 文件

            if (!SIGNING_DISABLED && HAS_KEYSTORE) {
                signingConfig signingConfigs.release
            }

            // NDJC:BUILD_RELEASE_EXTRA    // 例: 开启 R8 指标、关闭调试开关等
        }
        debug {
            minifyEnabled false
            // NDJC:BUILD_DEBUG_EXTRA
        }
    }

    packagingOptions {
        // NDJC:PACKAGING_RULES         // 例: resources.excludes += ['META-INF/*.kotlin_module']
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = '17' }

    buildFeatures {
        compose true
        // NDJC:FEATURES_EXTRA          // 例: viewBinding = true, buildConfig = true
    }
    composeOptions { kotlinCompilerExtensionVersion '1.5.3' }

    // NDJC:ANDROID_BLOCK_EXTRA         // 任意其它 android { } 级别配置
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'

    // Compose (BOM)
    implementation platform('androidx.compose:compose-bom:2024.05.00')
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // 协程 & DataStore
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'
    implementation 'androidx.datastore:datastore-preferences:1.1.1'

    // NDJC:DEPENDENCIES_EXTRA          // ⬅ 追加依赖（网络、图片、DI、导航、媒体、地图、支付等）
}
