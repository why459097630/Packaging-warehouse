plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // NDJC:PLUGINS_EXTRA
}

android {
    namespace 'com.ndjc.app'          // NDJC:PACKAGE_NAME
    compileSdk 34                      // NDJC:COMPILE_SDK

    defaultConfig {
        applicationId 'com.ndjc.app'  // NDJC:PACKAGE_NAME
        minSdk 24                      // NDJC:MIN_SDK
        targetSdk 34                   // NDJC:TARGET_SDK
        versionCode 1                  // NDJC:VERSION_CODE
        versionName '1.0.0'            // NDJC:VERSION_NAME

        // NDJC:RES_CONFIGS            // 生成器会替换成：resConfigs 'en', 'zh-CN' 等
    }

    // ===== 可选签名（从环境变量读取；CI 提供则启用）=====
    def ksPath = System.getenv('NDJC_KEYSTORE_PATH')
    def ksPass = System.getenv('NDJC_KEYSTORE_PASSWORD')
    def keyAlias = System.getenv('NDJC_KEY_ALIAS')
    def keyPass = System.getenv('NDJC_KEY_PASSWORD')
    def signingDisabled = System.getenv('NDJC_SIGNING_DISABLED') != null

    def hasSigning =
        !signingDisabled &&
        ksPath && ksPath.trim() &&
        ksPass && ksPass.trim() &&
        keyAlias && keyAlias.trim() &&
        keyPass && keyPass.trim()

    if (hasSigning) {
        println ">> NDJC: release signing ENABLED (keystore from env)"
        signingConfigs {
            release {
                storeFile file(ksPath)
                storePassword ksPass
                keyAlias keyAlias
                keyPassword keyPass
                enableV1Signing true
                enableV2Signing true
                enableV3Signing true
            }
        }
    } else {
        println ">> NDJC: release signing DISABLED (no keystore or NDJC_SIGNING_DISABLED)"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // NDJC:PROGUARD_FILES_EXTRA

            if (hasSigning) {
                signingConfig signingConfigs.release
            }
            // NDJC:SIGNING_CONFIG   // 生成器如注入同名语句也不冲突
        }
        debug {
            minifyEnabled false
        }
    }

    packagingOptions {
        // NDJC:PACKAGING_RULES
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = '17' }

    buildFeatures { compose true }
    composeOptions { kotlinCompilerExtensionVersion '1.5.3' }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'

    implementation platform('androidx.compose:compose-bom:2024.05.00')
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // === Preferences DataStore（用于 ThemePrefs 等） ===
    implementation 'androidx.datastore:datastore-preferences:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'

    // NDJC:DEPENDENCIES_EXTRA
}
