plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // NDJC:INTEGRATION_PLUGINS            // 三方 Gradle 插件（如：hilt、google-services 等）
}

android {
    namespace "com.ndjc.app"
    compileSdk 34

    defaultConfig {
        applicationId "com.ndjc.app"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0.0"

        // 语言/地区、构建常量、占位符等
        // NDJC:RES_CONFIGS                   // resConfigs 'en', 'zh-CN', 'zh-TW'
        // NDJC:BUILD_CONFIG                  // buildConfigField "String","API_BASE","\"https://api.example.com\""
        // NDJC:INTEGRATION_PLACEHOLDERS      // manifestPlaceholders += [UMENG_APPKEY:"...", CHANNEL:"official"]
    }

    signingConfigs {
        release {
            // 若环境变量提供签名，则自动启用；否则走未签名产物（后置签名）
            def disabled = (System.getenv('NDJC_SIGNING_DISABLED') ?: '0') == '1'
            def keystore = System.getenv('NDJC_KEYSTORE_PATH') ?: ''
            if (!disabled && keystore?.trim()) {
                storeFile file(keystore)
                storePassword(System.getenv('NDJC_KEYSTORE_PASSWORD') ?: '')
                keyAlias(System.getenv('NDJC_KEY_ALIAS') ?: '')
                keyPassword(System.getenv('NDJC_KEY_PASSWORD') ?: '')
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 有可用签名时挂载
            if ((System.getenv('NDJC_SIGNING_DISABLED') ?: '0') != '1'
                    && (System.getenv('NDJC_KEYSTORE_PATH') ?: '').trim()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            minifyEnabled false
        }
    }

    // 打包/资源/ABI/密钥等高级配置
    // NDJC:INTEGRATION_PACKAGING
    // packagingOptions { resources { excludes += ['META-INF/*'] } }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = '17' }

    buildFeatures { compose true }
    composeOptions { kotlinCompilerExtensionVersion '1.5.3' }

    testOptions {
        // NDJC:TEST_OPTIONS
        // unitTests.includeAndroidResources = true
        // animationsDisabled = true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'

    // Compose
    implementation platform('androidx.compose:compose-bom:2024.05.00')
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // 偏好/协程
    implementation "androidx.datastore:datastore-preferences:1.1.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1"

    // NDJC:INTEGRATION_DEPENDENCIES        // 三方 SDK 依赖位
    // api/implementation/kapt 等可由生成器补上

    // 测试依赖
    // NDJC:TEST_DEPS
    // testImplementation 'junit:junit:4.13.2'
    // androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    // androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// NDJC:INTEGRATION_PROGUARD_RULES_HINT
// 若三方依赖需要混淆保留，请在 proguard-rules.pro 的 NDJC:INTEGRATION_KEEP_RULES 段位追加
