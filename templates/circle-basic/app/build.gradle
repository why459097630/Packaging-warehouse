plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // HOOK:BEFORE_BUILD
    // BLOCK:DEPENDENCY_SNIPPETS
    // END_BLOCK
}

android {
    namespace 'com.ndjc.app'                         // NDJC:PACKAGE_NAME
    compileSdk 34                                    // NDJC:COMPILE_SDK

    defaultConfig {
        applicationId 'com.ndjc.app'                 // NDJC:PACKAGE_NAME
        minSdk 24                                    // NDJC:MIN_SDK
        targetSdk 34                                 // NDJC:TARGET_SDK
        versionCode 1                                // NDJC:VERSION_CODE
        versionName '1.0.0'                          // NDJC:VERSION_NAME

        // 将运行ID等注入到 BuildConfig
        buildConfigField "String",  "NDJC_RUN_ID",    "\"\""      // NDJC:BUILD_META_RUNID / NDJC:RUN_ID
        buildConfigField "String",  "NDJC_LOG_LEVEL", "\"info\""  // NDJC:LOG_LEVEL
        buildConfigField "boolean", "NDJC_DEBUG_LOG", "false"     // NDJC:DEBUG_LOG_ENABLED

        // NDJC:RES_CONFIGS  (例：resConfigs 'en', 'zh-CN')
        vectorDrawables { useSupportLibrary = true }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug    // 无签名时自动降级；你可替换为 release
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }

    // ABI / App Bundle / Packaging 规则（由列表锚点控制）
    // LIST:ABI_SPLITS        (例：splits { abi { enable true; include 'arm64-v8a','x86_64' } })
    // NDJC:USE_APP_BUNDLE    (例：bundle { language { enableSplit = false } })

    packagingOptions {
        // LIST:PACKAGING_RULES
        // 例：resources.excludes += ['META-INF/LICENSE*','META-INF/AL2.0','META-INF/LGPL2.1']
    }

    buildFeatures {
        compose true
        // ✅ AGP 8+ 默认关闭 BuildConfig，开启以支持 defaultConfig 中的 buildConfigField
        buildConfig true
    }

    // ✅ 对应 Kotlin 1.9.10 的 Compose 编译器版本
    composeOptions { kotlinCompilerExtensionVersion = "1.5.10" }

    // 与 Kotlin JVM 目标保持一致
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += ["-Xjvm-default=all"]
    }

    // 预留夜间/动效/密度/字体策略（由主题与 strings/xml 控制）
}

dependencies {
    // 版本由 BOM 统一对齐
    implementation platform("androidx.compose:compose-bom:2024.06.00")
    implementation "androidx.activity:activity-compose:1.9.2"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material3:material3"        // 走 BOM
    implementation "androidx.navigation:navigation-compose:2.8.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.4"
    implementation "androidx.core:core-ktx:1.13.1"

    // IF:PERMISSION.NOTIFICATION
    // （原来这里重复了一次 core-ktx，已去重）
    // ENDIF

    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}

// HOOK:AFTER_BUILD
