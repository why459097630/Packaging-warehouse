import { Octokit } from "octokit";

export default async function handler(req, res) {
  if (req.method !== "POST") return res.status(405).json({ ok: false, error: "Method Not Allowed" });

  try {
    const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
    const owner   = process.env.OWNER || "why459097630";
    const repo    = process.env.REPO  || "Packaging-warehouse";
    const branch  = process.env.REF   || "main";
    const workflow = process.env.WORKFLOW || "android-build-matrix.yml";

    const allowList = ["core-template", "form-template", "simple-template"];

    const { template = "core-template" } = (req.body || {});
    if (!allowList.includes(template)) {
      return res.status(400).json({ ok: false, error: "invalid template" });
    }

    await octokit.request(
      "POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches",
      { owner, repo, workflow_id: workflow, ref: branch, inputs: { template } }
    );

    // 返回“已派发”，GitHub 会回 204
    res.status(200).json({ ok: true, dispatched: true, template });
  } catch (e) {
    res.status(500).json({ ok: false, error: e?.message || String(e) });
  }
}
