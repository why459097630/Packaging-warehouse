name: Android Debug Build

on:
  workflow_dispatch:
  repository_dispatch:
    types: [generate-apk]

concurrency:
  group: android-debug-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # ★ 在构建前写入 ndjc_info.json（证明非空包）
      - name: Write NDJC info asset
        run: |
          node -e "const fs=require('fs'),p=require('path');
          const d=p.join('app','src','main','assets');
          fs.mkdirSync(d,{recursive:true});
          const data={
            template: process.env.NDJC_TEMPLATE || 'core-template',
            prompt: process.env.NDJC_PROMPT || 'demo',
            buildId: process.env.NDJC_BUILD_ID || '',
            buildTime: new Date().toISOString()
          };
          fs.writeFileSync(p.join(d,'ndjc_info.json'), JSON.stringify(data,null,2),'utf8');
          console.log('ndjc_info.json written:', data);"
        env:
          NDJC_TEMPLATE: ${{ github.event.client_payload.template }}
          NDJC_PROMPT: ${{ github.event.client_payload.prompt }}
          NDJC_BUILD_ID: ${{ github.event.client_payload.buildId }}

      - name: Build Debug APK
        run: ./gradlew clean assembleDebug
        env:
          ORG_GRADLE_PROJECT_android.useAndroidX: true
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g -Dfile.encoding=UTF-8'"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
