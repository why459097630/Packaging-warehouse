name: Android Debug Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # 关键：所有 run 步骤都在仓库根执行
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 可留着方便排错：确认 gradlew 在哪
      - name: Show workspace
        run: |
          pwd
          ls -al
          ls -al app || true

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x gradlew

      # ======（可选）解码签名文件======
      - name: Decode keystore (optional)
        if: ${{ env.KS != '' }}
        env:
          KS: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$KS" | base64 -d > "$HOME/release.jks"
          echo "NDJC_KEYSTORE_PATH=$HOME/release.jks" >> $GITHUB_ENV
          echo "NDJC_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "NDJC_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "NDJC_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GITHUB_ENV

      # ====== 构建 ======
      - name: Build release
        env:
          # 没有 keystore 就禁用签名
          NDJC_SIGNING_DISABLED: ${{ secrets.ANDROID_KEYSTORE_BASE64 == '' && '1' || '' }}
        run: ./gradlew :app:clean :app:assembleRelease -x lint

      - name: Locate APK
        id: locate
        run: |
          APK=$(ls -t app/build/outputs/apk/release/*.apk | head -n1)
          echo "apk=$APK" >> "$GITHUB_OUTPUT"
          ls -lh "$APK"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ steps.locate.outputs.apk }}
