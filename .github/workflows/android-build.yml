name: Android Debug Build

on:
  push:
    branches:
      - main
      - 'ndjc-run/**'          # ← 新增：从 API 推送 app 到独立分支时触发
    paths:
      - 'app/**'               # ← 分支上 app 目录变化触发
      - 'templates/**'
      - 'requests/**/05_summary.md'  # 如果仍把审计产物写到 main，也可用它触发
  workflow_dispatch: {}

concurrency:
  group: android-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    # 把 keystore 提升为 job 级 env，供 if 使用
    env:
      KS: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: FINGERPRINT
        run: |
          echo "HEAD -> $(git rev-parse --short HEAD)"
          echo "at:    $(pwd)"

      - name: Show workspace (debug)
        run: |
          pwd
          ls -al
          ls -al app || true
          ls -al gradle || true
          ls -al gradle/wrapper || true

      - name: Locate gradlew
        run: |
          echo "Looking for gradlew in repo root:"
          ls -al ./gradlew || true
          echo "find (depth<=2):"
          find "$GITHUB_WORKSPACE" -maxdepth 2 -name gradlew -print

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: |
          test -f ./gradlew || { echo "gradlew not found in repo root"; exit 1; }
          chmod +x ./gradlew
          ./gradlew --version

      # ===== 解码签名（可选）======
      - name: Decode keystore (optional)
        if: ${{ env.KS != '' }}     # ✅ 用 job 级 env 判断是否提供了签名
        run: |
          echo "${KS}" | base64 -d > "$HOME/release.jks"
          {
            echo "NDJC_KEYSTORE_PATH=$HOME/release.jks"
            echo "NDJC_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
            echo "NDJC_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}"
            echo "NDJC_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}"
          } >> "$GITHUB_ENV"

      # ===== 构建 =====
      - name: Build release
        run: |
          # 没有 keystore 就禁用签名
          if [ -z "${KS}" ]; then export NDJC_SIGNING_DISABLED=1; fi
          ./gradlew :app:clean :app:assembleRelease -x lint

      - name: Locate APK
        id: locate
        run: |
          APK=$(ls -t app/build/outputs/apk/release/*.apk | head -n1)
          echo "apk=$APK" >> "$GITHUB_OUTPUT"
          ls -lh "$APK"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ steps.locate.outputs.apk }}
