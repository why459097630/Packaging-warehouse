name: Android Debug Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      # 调试：看当前工作目录到底有什么
      - name: Show workspace (debug)
        run: |
          set -x
          pwd
          ls -la
          ls -la app || true
          ls -la gradle || true

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # 关键：定位 gradlew 的真实路径，并赋权
      - name: Locate gradlew
        id: gw
        shell: bash
        run: |
          set -euo pipefail
          GW=$(git ls-files | grep -x 'gradlew' || true)
          if [ -z "${GW}" ]; then
            GW=$(find . -maxdepth 2 -type f -name 'gradlew' -print -quit || true)
          fi
          if [ -z "${GW}" ]; then
            echo "❌ gradlew not found in workspace. Tree:"
            find . -maxdepth 2 -printf '%p\n'
            exit 1
          fi
          echo "Found gradlew at: ${GW}"
          echo "gw=${GW}" >> "$GITHUB_OUTPUT"
          chmod +x "${GW}"

      # （可选）解码签名
      - name: Decode keystore (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > "$HOME/release.jks"
          echo "NDJC_KEYSTORE_PATH=$HOME/release.jks" >> $GITHUB_ENV
          echo "NDJC_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "NDJC_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "NDJC_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Build release
        env:
          NDJC_SIGNING_DISABLED: ${{ secrets.ANDROID_KEYSTORE_BASE64 == '' && '1' || '' }}
        run: |
          "${{ steps.gw.outputs.gw }}" :app:clean :app:assembleRelease -x lint

      - name: Locate APK
        id: locate
        shell: bash
        run: |
          set -e
          APK=$(ls -t app/build/outputs/apk/release/*.apk | head -n1)
          echo "apk=$APK" >> "$GITHUB_OUTPUT"
          ls -lh "$APK"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ steps.locate.outputs.apk }}
