name: Android Debug Build

on:
  workflow_dispatch:
  push:
    paths:
      - 'app/**'
      - 'build.gradle'
      - 'settings.gradle'
      - '.github/workflows/android-build.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # ---------- 可选签名（和你之前一致） ----------
      - name: Decode keystore (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > $HOME/release.jks

      - name: Export signing env (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "NDJC_KEYSTORE_PATH=$HOME/release.jks" >> $GITHUB_ENV
          echo "NDJC_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "NDJC_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "NDJC_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GITHUB_ENV

      # ---------- 定位 gradlew 并设置可执行 ----------
      - name: Locate gradlew
        id: gw
        shell: bash
        run: |
          set -euo pipefail
          WRAPPER="$(git ls-files | grep -E '(^|/)gradlew$' | head -n1 || true)"
          if [[ -n "$WRAPPER" ]]; then
            echo "Found wrapper at: $WRAPPER"
            echo "path=$WRAPPER" >> "$GITHUB_OUTPUT"
          else
            echo "No gradlew found; will use 'gradle' command provided by setup-gradle action."
            echo "path=" >> "$GITHUB_OUTPUT"
          fi

      - name: Make gradlew executable (if exists)
        if: ${{ steps.gw.outputs.path != '' }}
        run: chmod +x '${{ steps.gw.outputs.path }}'

      # ---------- 构建 ----------
      - name: Build release
        env:
          # 没配置签名就自动关闭签名
          NDJC_SIGNING_DISABLED: ${{ secrets.ANDROID_KEYSTORE_BASE64 == '' && '1' || '' }}
        shell: bash
        run: |
          set -euxo pipefail
          if [[ -n "${{ steps.gw.outputs.path }}" ]]; then
            G="${{ steps.gw.outputs.path }}"
          else
            G="gradle"   # fallback：直接用 gradle 命令
          fi
          $G :app:clean
          $G :app:assembleRelease -x lint

      - name: Grab APK
        id: apk
        shell: bash
        run: |
          APK=$(ls -t app/build/outputs/apk/release/*.apk | head -n1)
          echo "apk=$APK" >> "$GITHUB_OUTPUT"
          ls -lh "$APK"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ steps.apk.outputs.apk }}
