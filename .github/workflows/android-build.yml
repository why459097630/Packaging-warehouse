### .github/workflows/android-build.yml
name: Android Build


on:
workflow_dispatch:
inputs:
runId:
description: "NDJC run id"
required: false
template:
description: "template key (core/simple/form)"
required: false
appTitle:
description: "App title"
required: false
packageName:
description: "Android applicationId"
required: false


concurrency:
group: android-build-${{ github.ref }}
cancel-in-progress: true


jobs:
build:
runs-on: ubuntu-latest


env:
KS: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}


steps:
- name: Checkout
uses: actions/checkout@v4
with:
fetch-depth: 0


- name: Setup Java 17
uses: actions/setup-java@v4
with:
distribution: temurin
java-version: "17"


- name: Setup Gradle
uses: gradle/actions/setup-gradle@v3


- name: Make gradlew executable
run: |
chmod +x ./gradlew
./gradlew --version


- name: Decode keystore (optional)
if: ${{ env.KS != '' }}
run: |
echo "${KS}" | base64 -d > "$HOME/release.jks"
{
echo "NDJC_KEYSTORE_PATH=$HOME/release.jks"
echo "NDJC_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
echo "NDJC_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}"
echo "NDJC_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}"
} >> "$GITHUB_ENV"


- name: Build release
run: |
if [ -z "${KS}" ]; then
echo "⚠️ No keystore found -> building unsigned APK"
./gradlew :app:clean :app:assembleRelease -x lint
else
echo "🔑 Keystore detected -> Gradle will sign APK"
./gradlew :app:clean :app:assembleRelease -x lint
fi


- name: Locate APK
id: locate
run: |
APK=$(ls -t app/build/outputs/apk/release/*.apk | head -n1)
path: ${{ steps.locate.outputs.apk }}
