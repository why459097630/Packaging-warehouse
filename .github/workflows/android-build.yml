name: Android Build (NDJC)

on:
  repository_dispatch:
    types: [generate-apk]

# 需要把构建产物、requests 等提交/上传
permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      # runId 来自 API 触发载荷，兜底用本次 workflow 的 run_id
      RUN_ID: ${{ github.event.client_payload.runId || github.run_id }}
      RUN_BRANCH: ndjc-run/${{ github.event.client_payload.runId || github.run_id }}

    steps:
      # 1) 主仓检出（脚本、模板在 main）
      - name: Checkout (bootstrap)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) 解析路径 & 在 Job Summary 上放可点链接
      - name: Resolve inputs → env & write summary
        shell: bash
        run: |
          set -euo pipefail
          echo "REQ_DIR=requests/${RUN_ID}" >> "$GITHUB_ENV"
          echo "APP_DIR=templates/circle-basic/app" >> "$GITHUB_ENV"

          {
            echo "### NDJC build inputs"
            echo ""
            echo "- **Run ID**: \`${RUN_ID}\`"
            echo "- **Run branch**: [\`${RUN_BRANCH}\`](https://github.com/${{ github.repository }}/tree/${RUN_BRANCH})"
            echo "- **Requests (will be generated)**: [\`requests/${RUN_ID}\`](https://github.com/${{ github.repository }}/tree/${RUN_BRANCH }}/requests/${RUN_ID})"
          } >> "$GITHUB_STEP_SUMMARY"

      # 3) 优先检出 run 分支（保存日志/请求），失败不终止；后续回退 main
      - name: Checkout run branch (for build & logs)
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: ${{ env.RUN_BRANCH }}
          path: repo_run
          fetch-depth: 0

      # 4) 同时准备 main 的快照（用于 fallback）
      - name: Checkout main (fallback for requests)
        uses: actions/checkout@v4
        with:
          ref: main
          path: repo_main
          fetch-depth: 0

      # 5) 在 run 分支 / main 分支定位 02_plan.json（优先 run，回退 main）
      - name: Locate 02_plan.json (prefer run branch, fallback to main)
        id: locate_plan
        shell: bash
        run: |
          set -euo pipefail
          RUN_PLAN="repo_run/requests/${RUN_ID}/02_plan.json"
          MAIN_PLAN="repo_main/requests/${RUN_ID}/02_plan.json"
          if [ -f "${RUN_PLAN}" ]; then
            echo "plan=${RUN_PLAN}" >> "$GITHUB_OUTPUT"
            echo "Found 02_plan.json in run branch: ${RUN_PLAN}"
          elif [ -f "${MAIN_PLAN}" ]; then
            echo "plan=${MAIN_PLAN}" >> "$GITHUB_OUTPUT"
            echo "Found 02_plan.json in main: ${MAIN_PLAN}"
          else
            echo "::error::02_plan.json NOT found in either run branch or main."
            exit 1
          fi

      # 6) 确保脚本可执行
      - name: Make ndjc-materialize.sh executable
        run: chmod +x scripts/ndjc-materialize.sh

      # 7) 物化（应用 plan → 模板），输出 03_apply_result.json
      - name: NDJC | Materialize (apply plan → template)
        env:
          PLAN_JSON: ${{ steps.locate_plan.outputs.plan }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "requests/${RUN_ID}"
          APPLY_JSON="requests/${RUN_ID}/03_apply_result.json"
          echo "PLAN_JSON=${PLAN_JSON}"
          echo "APPLY_JSON=${APPLY_JSON}"
          scripts/ndjc-materialize.sh "${APP_DIR}" "${PLAN_JSON}" "${APPLY_JSON}"

      # 8) Java / Gradle
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x gradlew

      # 9) 构建 APK（可按需切换 assembleRelease）
      - name: Build (debug)
        shell: bash
        run: ./gradlew :app:assembleDebug

      # 10) 上传 materialize 与构建日志（已升级为 @v4）
      - name: NDJC | Upload materialize logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ndjc-diag-${{ env.RUN_ID }}
          path: |
            requests/${{ env.RUN_ID }}/02_plan.json
            requests/${{ env.RUN_ID }}/03_apply_result.json
            actions-summary.txt
            build-logs/**/*
          if-no-files-found: warn
          retention-days: 7

      - name: Upload build logs (on failure too)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs-${{ env.RUN_ID }}
          path: |
            **/build/reports/**/*
            **/build/outputs/**/*
          if-no-files-found: warn
          retention-days: 7
