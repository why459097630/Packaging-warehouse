name: Build One Template APK

on:
  workflow_dispatch:
    inputs:
      template:
        description: 'Template name under templates/*'
        required: true
        default: 'generated'
      app_name:
        description: 'Android app label (strings.xml)'
        required: false
        default: '富游App'
      app_id:
        description: 'applicationId (package name)'
        required: false
        default: 'com.ndjc.generated'
      versionName:
        description: 'versionName'
        required: false
        default: '1.0.0'
      versionCode:
        description: 'versionCode (int)'
        required: false
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Packaging repo
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Clean old app
        run: |
          rm -rf app
          mkdir -p app

      - name: Select template & copy app
        shell: bash
        run: |
          set -e
          TEMPLATE="${{ github.event.inputs.template }}"
          echo "Using template: $TEMPLATE"
          if [ ! -d "templates/$TEMPLATE/app" ]; then
            echo "目录不存在: templates/$TEMPLATE/app"
            exit 1
          fi
          rm -rf app
          cp -r "templates/$TEMPLATE/app" ./app
          echo "copied:"
          find app -maxdepth 3 -type f | sed 's/^/  -> /'

      - name: Inject app_name, app_id, version
        shell: bash
        run: |
          set -e
          APP_NAME="${{ github.event.inputs.app_name }}"
          APP_ID="${{ github.event.inputs.app_id }}"
          VNAME="${{ github.event.inputs.versionName }}"
          VCODE="${{ github.event.inputs.versionCode }}"
          [ -z "$APP_NAME" ] && APP_NAME="富游App"
          [ -z "$APP_ID" ] && APP_ID="com.ndjc.generated"
          [ -z "$VNAME" ] && VNAME="1.0.0"
          [ -z "$VCODE" ] && VCODE="1"

          STR="app/src/main/res/values/strings.xml"
          if [ -f "$STR" ]; then
            if grep -q '<string name="app_name">' "$STR"; then
              sed -i "s#<string name=\"app_name\">.*</string>#<string name=\"app_name\">${APP_NAME}</string>#g" "$STR"
            else
              awk 'BEGIN{p=1} /<resources>/{print; print "  <string name=\"app_name\">'"$APP_NAME"'</string>"; p=0; next} {print}' "$STR" > "$STR.tmp" && mv "$STR.tmp" "$STR"
            fi
          fi

          B="app/build.gradle"
          if [ -f "$B" ]; then
            if grep -q 'applicationId' "$B"; then
              sed -i "s#applicationId \".*\"#applicationId \"${APP_ID}\"#g" "$B"
            else
              awk '
                /defaultConfig *\{/ && !a {print; print "        applicationId \"'"$APP_ID"'\""; a=1; next}
                {print}
              ' "$B" > "$B.tmp" && mv "$B.tmp" "$B"
            fi

            if grep -q 'versionName' "$B"; then
              sed -i "s#versionName \".*\"#versionName \"${VNAME}\"#g" "$B"
            else
              awk '
                /defaultConfig *\{/ && !vn {print; print "        versionName \"'"$VNAME"'\""; vn=1; next}
                {print}
              ' "$B" > "$B.tmp" && mv "$B.tmp" "$B"
            fi

            if grep -q 'versionCode' "$B"; then
              sed -i "s#versionCode \+[0-9]\+#versionCode ${VCODE}#g" "$B"
              sed -i "s#versionCode [0-9]\+#versionCode ${VCODE}#g" "$B"
            else
              awk '
                /defaultConfig *\{/ && !vc {print; print "        versionCode '"$VCODE"'"; vc=1; next}
                {print}
              ' "$B" > "$B.tmp" && mv "$B.tmp" "$B"
            fi
          fi

      - name: Patch Android 12 exported
        shell: bash
        run: |
          FILE="app/src/main/AndroidManifest.xml"
          if [ -f "$FILE" ]; then
            if grep -q 'LAUNCHER' "$FILE" && ! grep -q 'android:exported=' "$FILE"; then
              awk '
                /<activity/ { inAct=1 }
                inAct && /<intent-filter/ { inIF=1 }
                inIF && /LAUNCHER/ { need=1 }
                inAct && />/ {
                  if (need && $0 !~ /android:exported=/) {
                    sub(/<activity/, "<activity android:exported=\"true\"");
                  }
                  inAct=0; inIF=0; need=0
                }
                { print }
              ' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
              echo "android:exported added."
            else
              echo "No exported patch needed."
            fi
          fi

      - name: Ensure launcher icon
        shell: bash
        run: |
          set -e
          base="app/src/main/res"
          mkdir -p "$base/mipmap-anydpi-v26" "$base/drawable" "$base/values"

          if [ ! -f "$base/mipmap-anydpi-v26/ic_launcher.xml" ]; then
            cat > "$base/mipmap-anydpi-v26/ic_launcher.xml" <<'XML'
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
  <background android:drawable="@color/ic_launcher_background"/>
  <foreground android:drawable="@drawable/ic_launcher_foreground"/>
</adaptive-icon>
XML
          fi

          if [ ! -f "$base/drawable/ic_launcher_foreground.xml" ]; then
            cat > "$base/drawable/ic_launcher_foreground.xml" <<'XML'
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
  android:width="108dp" android:height="108dp"
  android:viewportWidth="108" android:viewportHeight="108">
  <path android:fillColor="#FFFFFF" android:pathData="M18,18h72v72h-72z"/>
  <path android:fillColor="#000000" android:pathData="M30,42h36v8h-28v8h24v8h-24v12h-8z"/>
</vector>
XML
          fi

          COLORS="$base/values/colors.xml"
          if [ -f "$COLORS" ]; then
            if ! grep -q 'ic_launcher_background' "$COLORS"; then
              awk '
                BEGIN{added=0}
                /<resources>/{print; if(!added){print "  <color name=\"ic_launcher_background\">#3F51B5</color>"; added=1; next}}
                {print}
              ' "$COLORS" > "$COLORS.tmp" && mv "$COLORS.tmp" "$COLORS"
            fi
          else
            mkdir -p "$base/values"
            cat > "$COLORS" <<'XML'
<?xml version="1.0" encoding="utf-8"?>
<resources>
  <color name="ic_launcher_background">#3F51B5</color>
</resources>
XML
          fi

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Build (Release)
        run: ./gradlew :app:assembleRelease --no-daemon

      - name: Upload artifact (APK)
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/release/*.apk
