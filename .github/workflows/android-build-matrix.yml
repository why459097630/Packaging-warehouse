name: android-build-matrix

on:
  workflow_dispatch:
  repository_dispatch:
    types: [generate-apk]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # 读取前端 payload（兼容驼峰/下划线；给出默认 template/app_name）
      - name: Extract inputs
        id: in
        run: |
          set -euo pipefail
          T="${{ github.event.client_payload.template || '' }}"
          A="${{ github.event.client_payload.app_name || github.event.client_payload.appName || 'MyApp' }}"
          B="${{ github.event.client_payload.api_base || github.event.client_payload.apiBase || '' }}"
          S="${{ github.event.client_payload.api_secret || github.event.client_payload.apiSecret || '' }}"
          : "${T:=form-template}"   # 默认 form-template
          echo "template=$T"    >> "$GITHUB_OUTPUT"
          echo "app_name=$A"    >> "$GITHUB_OUTPUT"
          echo "api_base=$B"    >> "$GITHUB_OUTPUT"
          echo "api_secret=$S"  >> "$GITHUB_OUTPUT"

      - name: Resolve template paths
        id: paths
        run: |
          set -euo pipefail
          TP="templates/${{ steps.in.outputs.template }}"
          if [[ ! -d "$TP" ]]; then
            echo "::error::Template directory not found: $TP"
            exit 1
          fi
          echo "tp=$TP"           >> "$GITHUB_OUTPUT"
          echo "app=$TP/app"      >> "$GITHUB_OUTPUT"

      - name: Ensure gradlew executable
        run: chmod +x "${{ steps.paths.outputs.tp }}/gradlew" || true

      # 写入 strings.xml / styles.xml（安全插入，不再使用容易报错的安全网脚本）
      - name: Inject resources (strings.xml, styles.xml)
        run: |
          set -euo pipefail
          ROOT="${{ steps.paths.outputs.app }}/src/main"
          VAL="$ROOT/res/values"
          STR="$VAL/strings.xml"
          STY="$VAL/styles.xml"
          mkdir -p "$VAL"

          if [[ ! -f "$STR" ]]; then
            cat >"$STR" <<'EOF'
<?xml version="1.0" encoding="utf-8"?>
<resources>
</resources>
EOF
          fi

          if [[ ! -f "$STY" ]]; then
            cat >"$STY" <<'EOF'
<?xml version="1.0" encoding="utf-8"?>
<resources>
  <style name="AppTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar"/>
</resources>
EOF
          fi

          # 清理旧项并插入新项（插到 </resources> 之前）
          sed -i '/name="app_name"/d;/name="api_base"/d;/name="api_secret"/d' "$STR" || true

          awk -v a="${{ steps.in.outputs.app_name }}" \
              -v b="${{ steps.in.outputs.api_base }}" \
              -v s="${{ steps.in.outputs.api_secret }}" '
            /<\/resources>/ && !done {
              print "    <string name=\"app_name\">" a "</string>";
              if (b != "") print "    <string name=\"api_base\">" b "</string>";
              if (s != "") print "    <string name=\"api_secret\">" s "</string>";
              done=1
            }
            { print }
          ' "$STR" > "$STR.tmp" && mv "$STR.tmp" "$STR"

          echo "===== strings.xml preview ====="
          sed -n '1,120p' "$STR" || true
          echo "================================"

      - name: Build debug APK (with full log)
        working-directory: ${{ steps.paths.outputs.tp }}
        run: |
          set -e
          ./gradlew --no-daemon --stacktrace -i clean :app:assembleDebug

      - name: Upload APK
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug
          path: |
            ${{ steps.paths.outputs.tp }}/app/build/outputs/apk/debug/*.apk

      - name: Upload values for audit
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: values-${{ steps.in.outputs.template }}
          path: |
            ${{ steps.paths.outputs.app }}/src/main/res/values/strings.xml
            ${{ steps.paths.outputs.app }}/src/main/AndroidManifest.xml

      - name: Upload Gradle logs & reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs
          path: |
            ${{ steps.paths.outputs.tp }}/app/build/outputs/logs/**
            ${{ steps.paths.outputs.tp }}/app/build/reports/**
          if-no-files-found: ignore
