name: android-build-matrix

on:
  workflow_dispatch:
    inputs:
      notes:
        description: 'Optional notes for this build'
        required: false
        default: ''
  push:
    paths:
      - 'app/**'
      - 'gradle/**'
      - 'settings.gradle'
      - 'build.gradle'
      - '.github/workflows/android-build-matrix.yml'

permissions:
  contents: write

concurrency:
  group: android-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    name: Build AAB & APK (release)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # JDK 17 + Gradle 缓存
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      # 避免 Permission denied
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 可选：注入签名（仅当提供了 keystore 才会执行）
      - name: Prepare release keystore (if provided)
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 || '' }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD || '' }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD || '' }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS || 'release' }}
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > release.keystore
          {
            echo "storePassword=$ANDROID_KEYSTORE_PASSWORD"
            echo "keyPassword=$ANDROID_KEY_PASSWORD"
            echo "keyAlias=$ANDROID_KEY_ALIAS"
            echo "storeFile=$PWD/release.keystore"
          } > keystore.properties

      # 构建：clean + assembleRelease + bundleRelease
      - name: Build (clean + assembleRelease + bundleRelease)
        run: |
          ./gradlew --console=plain --no-daemon clean :app:assembleRelease :app:bundleRelease

      # 上传产物（Artifacts）
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error
          retention-days: 7

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: aab
          path: app/build/outputs/bundle/release/*.aab
          if-no-files-found: error
          retention-days: 7

      # 创建 GitHub 预发布并附带 APK / AAB（可在 Releases 页面下载）
      - name: Create GitHub pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: run-${{ github.run_id }}
          name: Generated App · ${{ github.run_id }}
          body: ${{ github.event.inputs.notes }}
          prerelease: true
          fail_on_unmatched_files: false
          files: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
