name: android-build-matrix

on:
  workflow_dispatch:
    inputs:
      template:
        description: "Which app template to use (core-template|form-template|simple-template)"
        required: true
        default: form-template
      apk_name:
        description: "App name (will be injected to strings.xml)"
        required: true
        default: MyApp
      api_base:
        description: "API base URL"
        required: true
        default: https://example.com/api
      api_secret:
        description: "API secret"
        required: true
        default: secret123

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Ensure gradlew executable
        run: |
          chmod +x templates/*/gradlew || true

      - name: Inject API data into template
        shell: bash
        env:
          TEMPLATE: ${{ inputs.template }}
          APK_NAME: ${{ inputs.apk_name }}
          API_BASE: ${{ inputs.api_base }}
          API_SECRET: ${{ inputs.api_secret }}
        run: |
          set -euo pipefail

          ROOT="templates/${TEMPLATE}/app/src/main"
          VALUES="${ROOT}/res/values"
          STRINGS="${VALUES}/strings.xml"
          STYLES="${VALUES}/styles.xml"

          mkdir -p "${VALUES}"

          # 仅当 strings.xml 不存在时创建空的 resources
          if [ ! -f "${STRINGS}" ]; then
            cat > "${STRINGS}" <<'XML'
<?xml version="1.0" encoding="utf-8"?>
<resources>
</resources>
XML
          fi

          # 仅当 styles.xml 不存在时创建默认主题，避免 Duplicate resources
          if [ ! -f "${STYLES}" ]; then
            cat > "${STYLES}" <<'XML'
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <style name="AppTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar"/>
</resources>
XML
          fi

          # 先清理旧项
          sed -i '/name="app_name"/d'   "${STRINGS}" || true
          sed -i '/name="api_base"/d'   "${STRINGS}" || true
          sed -i '/name="api_secret"/d' "${STRINGS}" || true

          # 在 </resources> 前插入新项
          tmp="${STRINGS}.tmp"
          awk -v app="${APK_NAME}" -v base="${API_BASE}" -v secret="${API_SECRET}" '
            /<\/resources>/ && !done {
              print "    <string name=\"app_name\">"  app    "</string>"
              print "    <string name=\"api_base\">"  base   "</string>"
              print "    <string name=\"api_secret\">" secret "</string>"
              done=1
            }
            { print }
          ' "${STRINGS}" > "${tmp}"
          mv "${tmp}" "${STRINGS}"

      - name: Build debug APK
        shell: bash
        run: |
          cd "templates/${{ inputs.template }}"
          ./gradlew clean assembleDebug

      - name: Upload APK
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-${{ inputs.template }}
          path: |
            templates/${{ inputs.template }}/app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
