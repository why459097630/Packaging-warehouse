name: Android CI

on:
  push:
    branches: [ main ]
    paths:
      - "app/**"
      - "gradle/**"
      - "build.gradle"
      - "settings.gradle"
      - "gradlew"
      - "gradlew.bat"
      - ".github/workflows/android-build-matrix.yml"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: android-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build (unsigned)
        run: ./gradlew --no-daemon clean :app:assembleRelease

      # 签名（自动 zipalign + apksigner）
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # 可选：列出输出，便于排障
      - name: List APKs
        run: find app/build/outputs -maxdepth 3 -type f -name "*.apk" -ls

      # 验证已签名 APK 存在
      - name: Verify signed APK exists
        run: test -f app/build/outputs/apk/release/app-release.apk

      # 额外：校验证书（可选但推荐）
      - name: Verify signature
        run: |
          $ANDROID_HOME/build-tools/34.0.0/apksigner verify -v app/build/outputs/apk/release/app-release.apk

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: app/build/outputs/apk/release/app-release.apk
