name: Android Build (3 Templates Matrix)

on:
  # 既支持手动，也支持 Vercel 的 REST 调用（workflow_dispatch）
  workflow_dispatch:
    inputs:
      template:
        description: "which template to build: all | core-template | simple-template | form-template"
        required: false
        default: "all"

permissions:
  contents: read

concurrency:
  group: android-build-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # 规划要构建哪些模板（把 UI/接口传进来的 template 翻译成矩阵）
  plan:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.make.outputs.matrix }}
    steps:
      - name: Decide matrix from input
        id: make
        shell: bash
        run: |
          inp="${{ github.event.inputs.template }}"
          echo "template input: '${inp}'"

          # 允许简写：core/simple/form
          case "$inp" in
            ""|"all")
              MATRIX='["core-template","simple-template","form-template"]'
              ;;
            "core"|"core-template")
              MATRIX='["core-template"]'
              ;;
            "simple"|"simple-template")
              MATRIX='["simple-template"]'
              ;;
            "form"|"form-template")
              MATRIX='["form-template"]'
              ;;
            *)
              echo "::warning::Unknown template input '${inp}', fallback to 'all'"
              MATRIX='["core-template","simple-template","form-template"]'
              ;;
          esac

          echo "matrix=$MATRIX" >> "$GITHUB_OUTPUT"
          echo "Matrix decided: $MATRIX"

  build:
    needs: plan
    if: ${{ needs.plan.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        template: ${{ fromJson(needs.plan.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Grant execute permission for gradlew
        run: |
          chmod +x "templates/${{ matrix.template }}/gradlew"

      - name: Build Release APK
        working-directory: templates/${{ matrix.template }}
        run: |
          ./gradlew --no-daemon assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ matrix.template }}.apk
          path: templates/${{ matrix.template }}/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
          retention-days: 7
