      - name: Determine template from marker (robust with fallback)
        id: marker
        shell: bash
        run: |
          set -euo pipefail
          ALLOWED="core-template|form-template|simple-template"

          # 找最新的 build_marker 文件（名字里有没有模板名都行）
          MARKER="$(git ls-files 'app/src/main/assets/build_marker*' | tail -n1 || true)"
          TPL=""

          # 1) 从文件名解析
          if [[ -n "${MARKER}" ]] && echo "${MARKER}" | grep -E -o "${ALLOWED}" >/dev/null; then
            TPL="$(echo "${MARKER}" | grep -E -o "${ALLOWED}" | head -n1)"
          fi

          # 2) 从文件内容解析（支持 template=xxx 或 json 里包含 xxx）
          if [[ -z "${TPL}" && -n "${MARKER}" ]]; then
            if grep -E -o "${ALLOWED}" -m1 "${MARKER}" >/dev/null; then
              TPL="$(grep -E -o "${ALLOWED}" -m1 "${MARKER}")"
            elif head -n1 "${MARKER}" | grep -q 'template='; then
              TPL="$(head -n1 "${MARKER}" | sed -nE 's/.*template=([a-z-]+).*/\1/p')"
            fi
          fi

          # 3) 从最近一次提交信息兜底（我们的 commitMsg 是 "apk: <tpl> | ..."）
          if [[ -z "${TPL}" ]]; then
            MSG="$(git log -1 --pretty=%B || true)"
            if echo "${MSG}" | grep -E -o "${ALLOWED}" >/dev/null; then
              TPL="$(echo "${MSG}" | grep -E -o "${ALLOWED}" | head -n1)"
            fi
          fi

          # 4) 最终兜底：环境变量 TEMPLATE 或默认 form-template
          if [[ -z "${TPL}" ]]; then
            TPL="${TEMPLATE:-form-template}"
            echo "::warning::Template not found in marker/commit, falling back to ${TPL}"
          fi

          echo "template=${TPL}" >> "${GITHUB_OUTPUT}"
          echo "Using template=${TPL}"
