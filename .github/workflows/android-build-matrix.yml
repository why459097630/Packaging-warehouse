name: Android Build (3 Templates Matrix)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        template: [simple-template, core-template, form-template]

    steps:
      - name: Checkout Packaging repo
        uses: actions/checkout@v4

      - name: Checkout safe-templates
        uses: actions/checkout@v4
        with:
          repository: why459097630/safe-templates
          path: safe-templates

      - name: Show template structure (debug)
        run: |
          echo ">>> TEMPLATE=${{ matrix.template }}"
          ls -la "safe-templates/${{ matrix.template }}" || true
          find "safe-templates/${{ matrix.template }}" -maxdepth 2 -name gradlew -print || true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 给 gradlew 加执行权限（支持两种常见位置）
      - name: Make gradlew executable
        working-directory: safe-templates/${{ matrix.template }}
        run: |
          if [ -f gradlew ]; then
            chmod +x gradlew
          elif [ -f app/gradlew ]; then
            chmod +x app/gradlew
          else
            echo "❌ gradlew not found under $(pwd)"
            ls -la
            find . -maxdepth 3 -name gradlew
            exit 1
          fi

      # 原地构建 APK（根/子目录两种布局都兼容）
      - name: Build APK
        working-directory: safe-templates/${{ matrix.template }}
        run: |
          set -e
          if [ -f gradlew ]; then
            ./gradlew assembleRelease
          elif [ -f app/gradlew ]; then
            (cd app && ../gradlew assembleRelease)
          fi
          echo ">>> APKs found:"
          find . -path "*/build/outputs/apk/*/*.apk" -print

      # 收集 APK 到统一目录
      - name: Collect APKs
        working-directory: safe-templates/${{ matrix.template }}
        run: |
          mkdir -p "$GITHUB_WORKSPACE/upload/${{ matrix.template }}"
          find . -path "*/build/outputs/apk/*/*.apk" -print -exec cp {} \
            "$GITHUB_WORKSPACE/upload/${{ matrix.template }}/" \;
          ls -la "$GITHUB_WORKSPACE/upload/${{ matrix.template }}"

      # 上传产物（v4），名称带上 commit SHA
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.template }}-apk-${{ github.sha }}
          path: upload/${{ matrix.template }}/*.apk
