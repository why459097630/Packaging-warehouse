name: Android CI (robust + no-empty-apk)

on:
  push:
    branches: [ main ]

env:
  MARKER_FILE: app/src/main/assets/build_marker.txt
  MIN_APK_SIZE: "2097152"   # 2MB，避免空包

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 1) 从固定标记文件读模板（只接受三种值）
      - name: Determine template from marker (robust with fallback)
        id: tpl
        run: |
          set -euo pipefail
          if [ ! -f "$MARKER_FILE" ]; then
            echo "::error ::marker file not found: $MARKER_FILE"
            exit 1
          fi
          t=$(tr -d '\r\n' < "$MARKER_FILE" || true)
          case "$t" in
            core-template|form-template|simple-template) ;;
            *) echo "::error ::Invalid or missing template '$t'"; exit 1 ;;
          esac
          echo "template=$t" >> "$GITHUB_OUTPUT"

      # 2) 应用模板代码（app/ + gradle wrapper）
      - name: Apply template to app/
        run: |
          set -e
          TPL="${{ steps.tpl.outputs.template }}"
          rsync -a --delete "templates/$TPL/app/" app/
          # 复制 gradle wrapper 到仓库根（确保存在）
          rsync -a "templates/$TPL/gradle/" gradle/
          cp "templates/$TPL/gradlew" ./gradlew
          cp "templates/$TPL/gradlew.bat" ./gradlew.bat

      # 3) 修复行尾并赋可执行权限，校验 wrapper 文件存在
      - name: Prepare Gradle wrapper
        run: |
          set -e
          sed -i 's/\r$//' gradlew || true
          chmod +x gradlew
          if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "::error ::gradle-wrapper.jar missing"
            ls -R gradle || true
            exit 1
          fi
          ./gradlew --version

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Build (unsigned)
        run: |
          ./gradlew assembleRelease --stacktrace --no-daemon

      # 4) 防空包：必须生成 release APK 且 > MIN_APK_SIZE
      - name: Verify release APK exists and size
        id: verify
        run: |
          set -e
          apk=$(ls -1 app/build/outputs/apk/release/*-release.apk | head -n1 || true)
          if [ -z "$apk" ]; then
            echo "::error ::No release APK produced"
            exit 1
          fi
          size=$(stat -c '%s' "$apk")
          echo "apk=$apk" >> $GITHUB_OUTPUT
          echo "size=$size" >> $GITHUB_OUTPUT
          echo "APK: $apk"
          echo "SIZE: $size bytes"
          if [ "$size" -lt "${MIN_APK_SIZE}" ]; then
            echo "::error ::APK too small ($size bytes) < ${MIN_APK_SIZE}, fail build to avoid empty APK"
            exit 1
          fi

      - name: Upload unsigned APK
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-release-apk
          path: ${{ steps.verify.outputs.apk }}
