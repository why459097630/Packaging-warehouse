name: Android Build (NDJC)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Starting NDJC Android build..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # --- 改造后的 Android SDK 安装 ---
      - name: Install Android Commandline Tools
        run: |
          set -euxo pipefail
          sudo apt-get update -y
          sudo apt-get install -y curl unzip
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o /tmp/cmdtools.zip
          unzip -q /tmp/cmdtools.zip -d /tmp/cmdtools
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv /tmp/cmdtools/cmdline-tools "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools"           >> $GITHUB_PATH

      - name: Install Android SDK packages (34 / build-tools 34.0.0)
        run: |
          set -euxo pipefail
          sdkmanager --version
          yes | sdkmanager --licenses
          yes | sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          test -d "$ANDROID_SDK_ROOT/platforms/android-34"
          test -d "$ANDROID_SDK_ROOT/build-tools/34.0.0"

      - name: Diagnose SDK content
        run: |
          ls -la "$ANDROID_SDK_ROOT"
          ls -la "$ANDROID_SDK_ROOT/platforms" || true
          ls -la "$ANDROID_SDK_ROOT/build-tools" || true

      # --- 下面保持原有步骤 ---
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Ensure ImageMagick & jq
        run: sudo apt-get install -y imagemagick jq

      - name: Build launcher foregrounds
        run: echo "Skipping icon generation if not provided."

      - name: Check unresolved NDJC anchors (warn only)
        run: echo "TODO: Add NDJC anchor checker."

      - name: Prepare release keystore (if provided)
        if: env.SIGNING_KEYSTORE_B64 != ''
        run: |
          echo "$SIGNING_KEYSTORE_B64" | base64 -d > app/release.keystore
          ls -lh app/release.keystore

      - name: Build (assembleRelease)
        run: ./gradlew assembleRelease --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk
