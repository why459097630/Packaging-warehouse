name: android-build-matrix

on:
  workflow_dispatch: {}
  push:
    paths:
      - "app/**"
      - ".github/workflows/android-build-matrix.yml"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # 1) 拉代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2) 安装 Java 17（Temurin）
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # 3) Gradle 缓存（可选但推荐）
      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # 4) 给 gradlew 可执行权限（修复 Permission denied）
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 5)（可选）准备 keystore：如果你设置了四个 Secrets，就会自动写出 keystore 文件并用于签名
      - name: Prepare release keystore (if provided)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > "$GITHUB_WORKSPACE/keystore.jks"
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      # 6) 先做一次 Clean，避免老缓存把“空素材”打进包里
      - name: Clean Gradle outputs
        run: ./gradlew clean

      # 7) 构建 Release（APK + AAB）
      - name: Build AAB & APK (release)
        run: ./gradlew :app:assembleRelease :app:bundleRelease --no-daemon
        env:
          # 如果你在 app/build.gradle 里读取这些环境变量做签名，这里就会生效
          ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # 8) 上传 APK 工件
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      # 9) 上传 AAB 工件
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: aab
          path: app/build/outputs/bundle/release/*.aab
          if-no-files-found: error

      # 10) 创建 GitHub Release，并把 APK/AAB 也放过去
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: run-${{ github.run_id }}
          name: Generated App · ${{ github.run_id }}
          prerelease: true
          files: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
