name: android-build-matrix

on:
  workflow_dispatch:
    inputs:
      template:
        description: 'core-template | form-template | simple-template'
        required: true
        default: 'form-template'
      owner:
        description: 'app owner'
        required: true
        default: 'why459097630'
      repo:
        description: 'repo (Packaging-warehouse)'
        required: true
        default: 'Packaging-warehouse'
      branch:
        description: 'git branch'
        required: true
        default: 'main'
      app_name:
        description: 'App name'
        required: true
        default: 'MyApp'
      version_name:
        description: 'Version name'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code'
        required: true
        default: '1'
      reason:
        description: 'build reason'
        required: false
        default: 'manual'
  repository_dispatch:
    types: [generate-apk]

permissions:
  contents: read
  actions: read
  id-token: write

env:
  APP_DIR: ${{ github.workspace }}/generated-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      # 统一解析 inputs（兼容 repository_dispatch 与 workflow_dispatch）
      - name: Resolve inputs
        id: in
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            payload='${{ toJson(github.event.client_payload) }}'
          else
            payload='${{ toJson(inputs) }}'
          fi
          echo "$payload" > /tmp/payload.json
          jq -r '.template      // "form-template"'        /tmp/payload.json | xargs -I{} echo "template={}"       >> $GITHUB_OUTPUT
          jq -r '.owner         // "why459097630"'         /tmp/payload.json | xargs -I{} echo "owner={}"          >> $GITHUB_OUTPUT
          jq -r '.repo          // "Packaging-warehouse"'  /tmp/payload.json | xargs -I{} echo "repo={}"           >> $GITHUB_OUTPUT
          jq -r '.branch        // "main"'                 /tmp/payload.json | xargs -I{} echo "branch={}"         >> $GITHUB_OUTPUT
          jq -r '.app_name      // "MyApp"'                /tmp/payload.json | xargs -I{} echo "app_name={}"       >> $GITHUB_OUTPUT
          jq -r '.version_name  // "1.0.0"'                /tmp/payload.json | xargs -I{} echo "version_name={}"   >> $GITHUB_OUTPUT
          jq -r '.version_code  // "1"'                    /tmp/payload.json | xargs -I{} echo "version_code={}"   >> $GITHUB_OUTPUT
          jq -r '.reason        // "manual"'               /tmp/payload.json | xargs -I{} echo "reason={}"         >> $GITHUB_OUTPUT

      # 1) 从模板拷贝到工作目录
      - name: Generate project from template
        shell: bash
        run: |
          rm -rf "$APP_DIR" && mkdir -p "$APP_DIR"
          rsync -a "templates/${{ steps.in.outputs.template }}/" "$APP_DIR/"

          # 2) 把 API 的内容真正写进模板（占位符示例：__APP_NAME__ 等）
          find "$APP_DIR" -type f -name "*.xml" -o -name "AndroidManifest.xml" -o -name "*.gradle" |
            xargs sed -i \
              -e "s/__APP_NAME__/${{ steps.in.outputs.app_name }}/g" \
              -e "s/__VERSION_NAME__/${{ steps.in.outputs.version_name }}/g" \
              -e "s/__VERSION_CODE__/${{ steps.in.outputs.version_code }}/g"

      # 3) 关键修复：gradlew 权限 + 去 CRLF
      - name: Make gradle wrapper executable
        shell: bash
        working-directory: ${{ env.APP_DIR }}
        run: |
          sed -i 's/\r$//' gradlew || true
          find . -name "gradlew" -type f -print -exec chmod +x {} \;

      # 4) 为了确认“写入成功”，把关键文件打印出来
      - name: Sanity check
        shell: bash
        working-directory: ${{ env.APP_DIR }}
        run: |
          echo "== AndroidManifest.xml =="
          sed -n '1,120p' app/src/main/AndroidManifest.xml || true
          echo "== strings.xml =="
          sed -n '1,120p' app/src/main/res/values/strings.xml || true

      # 5) 如果存在签名信息，就打 release；否则走 debug
      - name: Decode keystore
        if: ${{ secrets.RELEASE_KEYSTORE_BASE64 != '' && secrets.RELEASE_KEY_ALIAS != '' && secrets.RELEASE_KEYSTORE_PASSWORD != '' && secrets.RELEASE_KEY_PASSWORD != '' }}
        shell: bash
        working-directory: ${{ env.APP_DIR }}
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Build release (signed)
        if: ${{ secrets.RELEASE_KEYSTORE_BASE64 != '' && secrets.RELEASE_KEY_ALIAS != '' && secrets.RELEASE_KEYSTORE_PASSWORD != '' && secrets.RELEASE_KEY_PASSWORD != '' }}
        shell: bash
        working-directory: ${{ env.APP_DIR }}
        env:
          KEY_ALIAS:          ${{ secrets.RELEASE_KEY_ALIAS }}
          KEYSTORE_PASSWORD:  ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          KEY_PASSWORD:       ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          ./gradlew clean assembleRelease

      - name: Build debug (fallback)
        if: ${{ !(secrets.RELEASE_KEYSTORE_BASE64 != '' && secrets.RELEASE_KEY_ALIAS != '' && secrets.RELEASE_KEYSTORE_PASSWORD != '' && secrets.RELEASE_KEY_PASSWORD != '') }}
        shell: bash
        working-directory: ${{ env.APP_DIR }}
        run: |
          ./gradlew clean assembleDebug

      # 6) 同时上传 APK 和生成源码，方便你确认不是“空包”
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ steps.in.outputs.app_name }}-${{ steps.in.outputs.version_name }}-${{ steps.in.outputs.reason }}
          path: ${{ env.APP_DIR }}/**/*.apk
          if-no-files-found: warn

      - name: Upload generated source
        uses: actions/upload-artifact@v4
        with:
          name: generated-source-${{ steps.in.outputs.app_name }}-${{ steps.in.outputs.version_name }}
          path: ${{ env.APP_DIR }}
          if-no-files-found: warn
