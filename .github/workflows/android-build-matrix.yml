name: Android CI (robust + no-empty-apk)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: "17"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # 从构建标记中解析模板，失败兜底 form-template
      - name: Determine template from marker (robust with fallback)
        id: marker
        shell: bash
        run: |
          set -euo pipefail
          marker='app/src/main/assets/build_marker.txt'
          fallback='form-template'
          if [[ -f "$marker" ]]; then
            t=$(<"$marker")
            t=${t//[[:space:]]/}
            case "$t" in
              core-template|form-template|simple-template) TEMPLATE="$t" ;;
              *) TEMPLATE="$fallback" ;;
            esac
          else
            TEMPLATE="$fallback"
          fi
          echo "TEMPLATE=$TEMPLATE" | tee -a "$GITHUB_ENV"

      # 把模板内容覆盖到 app/ 下
      - name: Apply template to app/
        run: |
          rsync -a --delete "templates/$TEMPLATE/" app/

      # 保险起见再处理一下可执行位
      - name: Prepare Gradle wrapper
        run: |
          chmod +x ./gradlew || true
          chmod +x templates/*/gradlew || true

      # 真正构建 release（无签名）
      - name: Build (unsigned)
        run: |
          ./gradlew --no-daemon --stacktrace :app:assembleRelease

      # 输出目录调试（失败时也能看到）
      - name: Show outputs tree (debug)
        if: always()
        run: |
          echo "== app/build/outputs =="
          find app/build/outputs -maxdepth 4 -type f -printf "%p\t%k KB\n" || true

      # 定位 APK，并做大小阈值校验（防空包）
      - name: Locate APK
        id: locate_apk
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          candidates=(app/build/outputs/apk/release/*.apk app/build/outputs/apk/*/*.apk)
          if ((${#candidates[@]}==0)); then
            echo "::error::No release APK produced under app/build/outputs"
            exit 1
          fi
          apk="${candidates[0]}"
          echo "apk=$apk" >> "$GITHUB_OUTPUT"
          size=$(stat -c%s "$apk")
          min=$((2*1024*1024))  # 阈值=2MB，按需调整
          echo "APK: $apk ($size bytes)"
          if (( size < min )); then
            echo "::error::APK too small ($size bytes < $min). Failing to prevent empty APK."
            exit 1
          fi

      # 只在成功定位后上传
      - name: Upload unsigned APK
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-release-apk
          path: ${{ steps.locate_apk.outputs.apk }}
