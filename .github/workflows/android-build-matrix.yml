name: Android Build (diagnostic)

on:
  push:
    branches: [ main ]
    paths:
      - 'requests/**'
      - 'app/**'
      - 'build.gradle*'
      - 'settings.gradle*'
      - 'gradle/**'
      - 'gradle.properties'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Fix gradlew permission
        run: chmod +x ./gradlew

      - name: Restore keystore
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks
          echo "KEYSTORE_PATH=$PWD/keystore.jks" >> $GITHUB_ENV
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      # ========= 关键：先只跑资源任务，打开详细日志 =========
      - name: Diagnose resource task
        run: |
          ./gradlew :app:processReleaseResources \
            --stacktrace --no-daemon --warning-mode all --console=plain --info
        continue-on-error: true

      # 把资源目录和 gradle 信息打包，失败也会上传
      - name: Collect debug artifacts
        if: always()
        run: |
          mkdir -p debug-logs
          ./gradlew -version > debug-logs/gradle-info.txt
          cp -r app/src/main/res debug-logs/res || true
          # 收集 Gradle 缓存下的 aapt2 日志（如果有）
          find ~/.gradle -type f -name "*.log" | head -n 50 | xargs -I{} sh -c 'echo "==== {} ====" >> debug-logs/gradle-caches.txt; tail -n 200 "{}" >> debug-logs/gradle-caches.txt || true'
      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: debug-logs/**

      # 诊断通过后再真正打包（如果上一阶段失败，这一步不会执行）
      - name: Build release
        if: success()   # 只有上一步资源任务成功才继续
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_ALIAS_PASSWORD: ${{ secrets.KEYSTORE_ALIAS_PASSWORD }}
          ORG_GRADLE_PROJECT_org.gradle.jvmargs: -Xmx2g -Dfile.encoding=UTF-8
        run: ./gradlew clean assembleRelease --stacktrace --no-daemon --warning-mode all --console=plain

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/*.apk
