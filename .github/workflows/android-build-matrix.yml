name: Android Build & Zero-Crash Gate

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # ==== 生成代码存在性校验（缺任一关键文件直接 fail） ====
      - name: Make scripts executable
        run: chmod +x scripts/check-generated.sh

      - name: Verify generated code exists (fail if missing)
        run: ./scripts/check-generated.sh

      # ---------- Gate 1: Lint + Assemble ----------
      - name: Lint & Assemble (fatal on warnings)
        run: |
          ./gradlew --stacktrace --no-daemon \
            lintDebug assembleDebug

      # 失败时把关键日志打出来 & 打包，便于定位
      - name: Dump Gradle error logs (always)
        if: always()
        run: |
          echo "---- manifest merger ----"
          find app/build/outputs -type f -name "manifest-merger*.txt" -print -exec sed -n '1,200p' {} \; || true
          echo "---- javac errors ----"
          find app/build -type f -name "*.log" -print -exec sed -n '1,200p' {} \; || true
          echo "---- lint results ----"
          find app/build/reports -type f \( -name "lint-results*.xml" -o -name "lint-results*.html" \) -print || true

      - name: Upload build reports (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            app/build/outputs/**/*.txt
            app/build/reports/**/*

      # ---------- Gate 2: Robolectric Unit Tests (no device) ----------
      - name: Run unit tests (Robolectric smoke)
        run: |
          ./gradlew --stacktrace --no-daemon testDebugUnitTest

      # ---------- Gate 3: Emulator Smoke Run ----------
      - name: Emulator smoke run (15s crash monitor)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          profile: pixel_5
          disable-animations: true
          script: |
            APK=app/build/outputs/apk/debug/app-debug.apk
            if [ ! -f "$APK" ]; then
              echo "APK not found at $APK"
              exit 1
            fi

            adb install -r "$APK"

            # Extract package & launcher activity from the APK
            AAPT=$(which aapt || true)
            if [ -z "$AAPT" ]; then
              echo "aapt not found, installing build-tools with aapt..."
              sdkmanager --install "build-tools;34.0.0"
              export PATH="$ANDROID_HOME/build-tools/34.0.0:$PATH"
            fi

            PKG=$(aapt dump badging "$APK" | awk -F"'" '/package: name=/{print $2}')
            ACT=$(aapt dump badging "$APK" | awk -F"'" '/launchable-activity: name=/{print $2}')
            echo "Detected package: $PKG"
            echo "Detected launcher: $ACT"

            adb logcat -c
            adb shell am start -n ${PKG}/${ACT}

            set +e
            timeout 15s bash -c 'adb logcat | tee /tmp/logcat.txt | grep -q -E "FATAL EXCEPTION|Process[[:space:]].*'"$PKG"'[[:space:]].*has died"'
            RES=$?
            set -e

            if [ $RES -eq 0 ]; then
              echo "Crash detected during smoke run:"
              tail -n 200 /tmp/logcat.txt || true
              exit 1
            else
              echo "Smoke run passed (no fatal crash in 15s)."
            fi

      # ---------- Artifact (only if all gates passed) ----------
      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
