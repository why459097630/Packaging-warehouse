以下是一个基本的安卓app源代码结构和JSON数据结构，用于介绍菜品的app：

**安卓app源代码结构：**

1. `MainActivity.java`：主活动，负责显示菜品列表和导航到其他活动。
2. `DishActivity.java`：菜品活动，负责显示菜品详情，包括照片、文字介绍、价格等。
3. `UploadActivity.java`：上传活动，负责上传照片和文字介绍。
4. `LoginActivity.java`：登录活动，负责用户登录。
5. `MessageActivity.java`：留言活动，负责显示和发送留言。
6. `DishAdapter.java`：菜品适配器，负责将菜品数据绑定到列表视图。
7. `DishModel.java`：菜品模型，负责存储菜品数据。

**JSON数据结构：**

```json
{
  "dishes": [
    {
      "id": 1,
      "name": "菜品1",
      "description": "这是菜品1的描述",
      "price": 10.99,
      "image": "https://example.com/image1.jpg",
      "comments": [
        {
          "id": 1,
          "content": "很好吃",
          "username": "用户1"
        },
        {
          "id": 2,
          "content": "不错",
          "username": "用户2"
        }
      ]
    },
    {
      "id": 2,
      "name": "菜品2",
      "description": "这是菜品2的描述",
      "price": 9.99,
      "image": "https://example.com/image2.jpg",
      "comments": [
        {
          "id": 3,
          "content": "很好",
          "username": "用户3"
        }
      ]
    }
  ],
  "users": [
    {
      "id": 1,
      "username": "用户1",
      "password": "密码1"
    },
    {
      "id": 2,
      "username": "用户2",
      "password": "密码2"
    }
  ]
}
```

**安卓app源代码：**

```java
// MainActivity.java
public class MainActivity extends AppCompatActivity {
  private ListView dishList;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    dishList = findViewById(R.id.dish_list);

    // 加载菜品数据
    loadDishData();
  }

  private void loadDishData() {
    // 从JSON数据中加载菜品数据
    String jsonData = loadJsonData();
    JSONObject jsonObject = new JSONObject(jsonData);
    JSONArray dishes = jsonObject.getJSONArray("dishes");

    // 创建菜品适配器
    DishAdapter dishAdapter = new DishAdapter(this, dishes);

    // 设置菜品列表适配器
    dishList.setAdapter(dishAdapter);
  }
}

// DishActivity.java
public class DishActivity extends AppCompatActivity {
  private ImageView dishImage;
  private TextView dishName;
  private TextView dishDescription;
  private TextView dishPrice;
  private EditText commentEditText;
  private Button commentButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_dish);

    // 初始化视图
    dishImage = findViewById(R.id.dish_image);
    dishName = findViewById(R.id.dish_name);
    dishDescription = findViewById(R.id.dish_description);
    dishPrice = findViewById(R.id.dish_price);
    commentEditText = findViewById(R.id.comment_edit_text);
    commentButton = findViewById(R.id.comment_button);

    // 加载菜品数据
    loadDishData();
  }

  private void loadDishData() {
    // 从JSON数据中加载菜品数据
    String jsonData = loadJsonData();
    JSONObject jsonObject = new JSONObject(jsonData);
    JSONArray dishes = jsonObject.getJSONArray("dishes");
    JSONObject dish = dishes.getJSONObject(0);

    // 设置菜品数据
    dishImage.setImageResource(R.drawable.dish_image);
    dishName.setText(dish.getString("name"));
    dishDescription.setText(dish.getString("description"));
    dishPrice.setText(String.valueOf(dish.getDouble("price")));
  }

  public void comment(View view) {
    // 发送留言
    String comment = commentEditText.getText().toString();
    // 保存留言到JSON数据中
    saveComment(comment);
  }
}

// UploadActivity.java
public class UploadActivity extends AppCompatActivity {
  private ImageView uploadImage;
  private EditText uploadName;
  private EditText uploadDescription;
  private EditText uploadPrice;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_upload);

    // 初始化视图
    uploadImage = findViewById(R.id.upload_image);
    uploadName = findViewById(R.id.upload_name);
    uploadDescription = findViewById(R.id.upload_description);
    uploadPrice = findViewById(R.id.upload_price);

    // 设置上传按钮点击事件
    uploadImage.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View view) {
        // 上传照片
        uploadPhoto();
      }
    });
  }

  private void uploadPhoto() {
    // 上传照片到服务器
    // ...
  }

  public void upload(View view) {
    // 上传菜品数据
    String name = uploadName.getText().toString();
    String description = uploadDescription.getText().toString();
    double price = Double.parseDouble(uploadPrice.getText().toString());
    // 保存菜品数据到JSON数据中
    saveDish(name, description, price);
  }
}

// LoginActivity.java
public class LoginActivity extends AppCompatActivity {
  private EditText usernameEditText;
  private EditText passwordEditText;
  private Button loginButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);

    // 初始化视图
    usernameEditText = findViewById(R.id.username_edit_text);
    passwordEditText = findViewById(R.id.password_edit_text);
    loginButton = findViewById(R.id.login_button);

    // 设置登录按钮点击事件
    loginButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View view) {
        // 登录
        login();
      }
    });
  }

  private void login() {
    // 登录到服务器
    // ...
  }
}

// MessageActivity.java
public class MessageActivity extends AppCompatActivity {
  private ListView messageList;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_message);

    // 初始化视图
    messageList = findViewById(R.id.message_list);

    // 加载留言数据
    loadMessageData();
  }

  private void loadMessageData() {
    // 从JSON数据中加载留言数据
    String jsonData = loadJsonData();
    JSONObject jsonObject = new JSONObject(jsonData);
    JSONArray comments = jsonObject.getJSONArray("comments");

    // 创建留言适配器
    MessageAdapter messageAdapter = new MessageAdapter(this, comments);

    // 设置留言列表适配器
    messageList.setAdapter(messageAdapter);
  }
}
```

**JSON数据操作：**

```java
// 加载JSON数据
private String loadJsonData() {
  // 从文件或服务器加载JSON数据
  // ...
  return jsonData;
}

// 保存菜品数据
private void saveDish(String name, String description, double price) {
  // 将菜品数据添加到JSON数据中
  JSONObject dish = new JSONObject();
  dish.put("name", name);
  dish.put("description", description);
  dish.put("price", price);
  // ...
}

// 保存留言数据
private void saveComment(String comment) {
  // 将留言数据添加到JSON数据中
  JSONObject commentObject = new JSONObject();
  commentObject.put("content", comment);
  // ...
}
```

注意：以上代码仅为示例，需要根据实际需求进行修改和扩展。同时，需要处理错误和异常情况，例如网络请求失败、数据解析错误等。