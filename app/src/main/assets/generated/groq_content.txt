以下是一个基本的安卓app源代码结构和JSON数据结构，用于介绍菜品的app：

**app结构：**

* MainActivity：主界面，展示菜品列表
* DishActivity：菜品详情界面，展示菜品照片、文字介绍、价格等信息
* UploadActivity：上传菜品照片和文字介绍的界面
* LoginActivity：登录界面
* MessageActivity：留言系统界面

**JSON数据结构：**

* Dish：菜品信息
	+ id：菜品ID
	+ name：菜品名称
	+ description：菜品文字介绍
	+ price：菜品价格
	+ image：菜品照片URL
* User：用户信息
	+ id：用户ID
	+ username：用户名
	+ password：用户密码
* Message：留言信息
	+ id：留言ID
	+ content：留言内容
	+ userId：留言用户ID
	+ dishId：留言菜品ID

**源代码：**

**MainActivity.java：**
```java
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.Toast;

import com.example.dishapp.R;
import com.example.dishapp.adapter.DishAdapter;
import com.example.dishapp.model.Dish;
import com.example.dishapp.util.HttpUtil;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity {
    private RecyclerView recyclerView;
    private DishAdapter adapter;
    private List<Dish> dishList;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        recyclerView = findViewById(R.id.recycler_view);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        dishList = new ArrayList<>();
        adapter = new DishAdapter(dishList);
        recyclerView.setAdapter(adapter);

        // 加载菜品列表
        HttpUtil.getDishList(new HttpUtil.Callback() {
            @Override
            public void onSuccess(List<Dish> dishes) {
                dishList.clear();
                dishList.addAll(dishes);
                adapter.notifyDataSetChanged();
            }

            @Override
            public void onFailure(String error) {
                Toast.makeText(MainActivity.this, error, Toast.LENGTH_SHORT).show();
            }
        });
    }
}
```

**DishActivity.java：**
```java
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.widget.ImageView;
import android.widget.TextView;

import com.example.dishapp.R;
import com.example.dishapp.model.Dish;
import com.example.dishapp.util.HttpUtil;

public class DishActivity extends AppCompatActivity {
    private Dish dish;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_dish);

        // 获取菜品信息
        dish = (Dish) getIntent().getSerializableExtra("dish");

        // 展示菜品信息
        ImageView imageView = findViewById(R.id.image_view);
        TextView nameTextView = findViewById(R.id.name_text_view);
        TextView descriptionTextView = findViewById(R.id.description_text_view);
        TextView priceTextView = findViewById(R.id.price_text_view);

        HttpUtil.getImage(dish.getImage(), new HttpUtil.Callback() {
            @Override
            public void onSuccess(byte[] bytes) {
                imageView.setImageBitmap(BitmapFactory.decodeByteArray(bytes, 0, bytes.length));
            }

            @Override
            public void onFailure(String error) {
                Toast.makeText(DishActivity.this, error, Toast.LENGTH_SHORT).show();
            }
        });

        nameTextView.setText(dish.getName());
        descriptionTextView.setText(dish.getDescription());
        priceTextView.setText(String.valueOf(dish.getPrice()));
    }
}
```

**UploadActivity.java：**
```java
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;

import com.example.dishapp.R;
import com.example.dishapp.model.Dish;
import com.example.dishapp.util.HttpUtil;

public class UploadActivity extends AppCompatActivity {
    private EditText nameEditText;
    private EditText descriptionEditText;
    private EditText priceEditText;
    private ImageView imageView;
    private Button uploadButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_upload);

        nameEditText = findViewById(R.id.name_edit_text);
        descriptionEditText = findViewById(R.id.description_edit_text);
        priceEditText = findViewById(R.id.price_edit_text);
        imageView = findViewById(R.id.image_view);
        uploadButton = findViewById(R.id.upload_button);

        uploadButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // 上传菜品信息
                Dish dish = new Dish();
                dish.setName(nameEditText.getText().toString());
                dish.setDescription(descriptionEditText.getText().toString());
                dish.setPrice(Float.parseFloat(priceEditText.getText().toString()));
                dish.setImage(imageView.getDrawable().getConstantState().newDrawable().getBitmap());

                HttpUtil.uploadDish(dish, new HttpUtil.Callback() {
                    @Override
                    public void onSuccess(Dish dish) {
                        Toast.makeText(UploadActivity.this, "上传成功", Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onFailure(String error) {
                        Toast.makeText(UploadActivity.this, error, Toast.LENGTH_SHORT).show();
                    }
                });
            }
        });
    }
}
```

**LoginActivity.java：**
```java
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.example.dishapp.R;
import com.example.dishapp.model.User;
import com.example.dishapp.util.HttpUtil;

public class LoginActivity extends AppCompatActivity {
    private EditText usernameEditText;
    private EditText passwordEditText;
    private Button loginButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        usernameEditText = findViewById(R.id.username_edit_text);
        passwordEditText = findViewById(R.id.password_edit_text);
        loginButton = findViewById(R.id.login_button);

        loginButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // 登录
                User user = new User();
                user.setUsername(usernameEditText.getText().toString());
                user.setPassword(passwordEditText.getText().toString());

                HttpUtil.login(user, new HttpUtil.Callback() {
                    @Override
                    public void onSuccess(User user) {
                        Toast.makeText(LoginActivity.this, "登录成功", Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onFailure(String error) {
                        Toast.makeText(LoginActivity.this, error, Toast.LENGTH_SHORT).show();
                    }
                });
            }
        });
    }
}
```

**MessageActivity.java：**
```java
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.example.dishapp.R;
import com.example.dishapp.model.Message;
import com.example.dishapp.util.HttpUtil;

public class MessageActivity extends AppCompatActivity {
    private EditText contentEditText;
    private Button sendButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_message);

        contentEditText = findViewById(R.id.content_edit_text);
        sendButton = findViewById(R.id.send_button);

        sendButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // 发送留言
                Message message = new Message();
                message.setContent(contentEditText.getText().toString());

                HttpUtil.sendMessage(message, new HttpUtil.Callback() {
                    @Override
                    public void onSuccess(Message message) {
                        Toast.makeText(MessageActivity.this, "发送成功", Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onFailure(String error) {
                        Toast.makeText(MessageActivity.this, error, Toast.LENGTH_SHORT).show();
                    }
                });
            }
        });
    }
}
```

**HttpUtil.java：**
```java
import android.util.Log;

import com.example.dishapp.model.Dish;
import com.example.dishapp.model.Message;
import com.example.dishapp.model.User;

import java.io.IOException;
import java.util.List;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class HttpUtil {
    private static final String BASE_URL = "https://example.com/api/";

    public static void getDishList(Callback callback) {
        OkHttpClient client = new OkHttpClient();
        Request request = new Request.Builder()
                .url(BASE_URL + "dishes")
                .build();

        try {
            Response response = client.newCall(request).execute();
            if (response.isSuccessful()) {
                List<Dish> dishes = parseDishList(response.body().string());
                callback.onSuccess(dishes);
            } else {
                callback.onFailure(response.message());
            }
        } catch (IOException e) {
            callback.onFailure(e.getMessage());
        }
    }

    public static void uploadDish(Dish dish, Callback callback) {
        OkHttpClient client = new OkHttpClient();
        Request request = new Request.Builder()
                .url(BASE_URL + "dishes")
                .post(RequestBody.create(MediaType.get("application/json"), dish.toJson()))
                .build();

        try {
            Response response = client.newCall(request).execute();
            if (response.isSuccessful()) {
                Dish uploadedDish = parseDish(response.body().string());
                callback.onSuccess(uploadedDish);
            } else {
                callback.onFailure(response.message());
            }
        } catch (IOException e) {
            callback.onFailure(e.getMessage());
        }
    }

    public static void login(User user, Callback callback) {
        OkHttpClient client = new OkHttpClient();
        Request request = new Request.Builder()
                .url(BASE_URL + "login")
                .post(RequestBody.create(MediaType.get("application/json"), user.toJson()))
                .build();

        try {
            Response response = client.newCall(request).execute();
            if (response.isSuccessful()) {
                User loggedUser = parseUser(response.body().string());
                callback.onSuccess(loggedUser);
            } else {
                callback.onFailure(response.message());
            }
        } catch (IOException e) {
            callback.onFailure(e.getMessage());
        }
    }

    public static void sendMessage(Message message, Callback callback) {
        OkHttpClient client = new OkHttpClient();
        Request request = new Request.Builder()
                .url(BASE_URL + "messages")
                .post(RequestBody.create(MediaType.get("application/json"), message.toJson()))
                .build();

        try {
            Response response = client.newCall(request).execute();
            if (response.isSuccessful()) {
                Message sentMessage = parseMessage(response.body().string());
                callback.onSuccess(sentMessage);
            } else {
                callback.onFailure(response.message());
            }
        } catch (IOException e) {
            callback.onFailure(e.getMessage());
        }
    }

    private static List<Dish> parseDishList(String json) {
        // 解析JSON数据
    }

    private static Dish parseDish(String json) {
        // 解析JSON数据
    }

    private static User parseUser(String json) {
        // 解析JSON数据
    }

    private static Message parseMessage(String json) {
        // 解析JSON数据
    }

    public interface Callback {
        void onSuccess(List<Dish> dishes);

        void onSuccess(Dish dish);

        void onSuccess(User user);

        void onSuccess(Message message);

        void onFailure(String error);
    }
}
```

注意：上述代码仅为示例，需要根据实际情况进行修改和完善。同时，需要添加错误处理和日志记录等功能。