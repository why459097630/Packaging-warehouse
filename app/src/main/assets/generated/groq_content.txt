以下是一个基本的安卓app源代码结构和JSON数据结构，用于介绍菜品的app：

**安卓app源代码结构：**

1. `MainActivity.java`：主活动，负责显示菜品列表和导航到其他活动。
2. `DishActivity.java`：菜品活动，负责显示菜品详情，包括照片、文字介绍、价格等。
3. `UploadActivity.java`：上传活动，负责上传照片和文字介绍。
4. `LoginActivity.java`：登录活动，负责用户登录。
5. `MessageActivity.java`：留言活动，负责显示和发送留言。
6. `DishAdapter.java`：菜品适配器，负责将菜品数据绑定到列表视图。
7. `DishModel.java`：菜品模型，负责存储菜品数据。

**JSON数据结构：**

```json
{
  "dishes": [
    {
      "id": 1,
      "name": "菜品1",
      "description": "这是菜品1的描述",
      "price": 10.99,
      "image": "https://example.com/image1.jpg",
      "comments": [
        {
          "id": 1,
          "username": "用户1",
          "content": "这道菜很好吃"
        },
        {
          "id": 2,
          "username": "用户2",
          "content": "我也喜欢这道菜"
        }
      ]
    },
    {
      "id": 2,
      "name": "菜品2",
      "description": "这是菜品2的描述",
      "price": 9.99,
      "image": "https://example.com/image2.jpg",
      "comments": [
        {
          "id": 3,
          "username": "用户3",
          "content": "这道菜不错"
        }
      ]
    }
  ],
  "users": [
    {
      "id": 1,
      "username": "用户1",
      "password": "密码1"
    },
    {
      "id": 2,
      "username": "用户2",
      "password": "密码2"
    }
  ]
}
```

**安卓app源代码：**

```java
// MainActivity.java
public class MainActivity extends AppCompatActivity {
  private ListView dishList;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    dishList = (ListView) findViewById(R.id.dish_list);

    // 加载菜品数据
    loadDishData();
  }

  private void loadDishData() {
    // 从JSON数据中加载菜品数据
    String jsonData = loadJsonData();
    JSONObject jsonObject = new JSONObject(jsonData);
    JSONArray dishes = jsonObject.getJSONArray("dishes");

    // 创建菜品适配器
    DishAdapter adapter = new DishAdapter(this, dishes);
    dishList.setAdapter(adapter);
  }
}

// DishActivity.java
public class DishActivity extends AppCompatActivity {
  private ImageView dishImage;
  private TextView dishName;
  private TextView dishDescription;
  private TextView dishPrice;
  private EditText commentEditText;
  private Button commentButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_dish);

    // 初始化视图
    dishImage = (ImageView) findViewById(R.id.dish_image);
    dishName = (TextView) findViewById(R.id.dish_name);
    dishDescription = (TextView) findViewById(R.id.dish_description);
    dishPrice = (TextView) findViewById(R.id.dish_price);
    commentEditText = (EditText) findViewById(R.id.comment_edit_text);
    commentButton = (Button) findViewById(R.id.comment_button);

    // 加载菜品数据
    loadDishData();
  }

  private void loadDishData() {
    // 从Intent中获取菜品ID
    int dishId = getIntent().getIntExtra("dish_id", 0);

    // 从JSON数据中加载菜品数据
    String jsonData = loadJsonData();
    JSONObject jsonObject = new JSONObject(jsonData);
    JSONArray dishes = jsonObject.getJSONArray("dishes");
    JSONObject dish = dishes.getJSONObject(dishId);

    // 显示菜品数据
    dishImage.setImageResource(R.drawable.dish_image);
    dishName.setText(dish.getString("name"));
    dishDescription.setText(dish.getString("description"));
    dishPrice.setText(String.valueOf(dish.getDouble("price")));
  }

  // 上传评论
  public void comment(View view) {
    // 获取评论内容
    String comment = commentEditText.getText().toString();

    // 上传评论
    uploadComment(comment);
  }

  private void uploadComment(String comment) {
    // 上传评论到服务器
    // ...
  }
}

// UploadActivity.java
public class UploadActivity extends AppCompatActivity {
  private ImageView dishImage;
  private EditText dishNameEditText;
  private EditText dishDescriptionEditText;
  private EditText dishPriceEditText;
  private Button uploadButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_upload);

    // 初始化视图
    dishImage = (ImageView) findViewById(R.id.dish_image);
    dishNameEditText = (EditText) findViewById(R.id.dish_name_edit_text);
    dishDescriptionEditText = (EditText) findViewById(R.id.dish_description_edit_text);
    dishPriceEditText = (EditText) findViewById(R.id.dish_price_edit_text);
    uploadButton = (Button) findViewById(R.id.upload_button);

    // 上传菜品
    uploadButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View view) {
        // 获取菜品数据
        String dishName = dishNameEditText.getText().toString();
        String dishDescription = dishDescriptionEditText.getText().toString();
        double dishPrice = Double.parseDouble(dishPriceEditText.getText().toString());

        // 上传菜品到服务器
        uploadDish(dishName, dishDescription, dishPrice);
      }
    });
  }

  private void uploadDish(String dishName, String dishDescription, double dishPrice) {
    // 上传菜品到服务器
    // ...
  }
}

// LoginActivity.java
public class LoginActivity extends AppCompatActivity {
  private EditText usernameEditText;
  private EditText passwordEditText;
  private Button loginButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);

    // 初始化视图
    usernameEditText = (EditText) findViewById(R.id.username_edit_text);
    passwordEditText = (EditText) findViewById(R.id.password_edit_text);
    loginButton = (Button) findViewById(R.id.login_button);

    // 登录
    loginButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View view) {
        // 获取用户名和密码
        String username = usernameEditText.getText().toString();
        String password = passwordEditText.getText().toString();

        // 登录到服务器
        login(username, password);
      }
    });
  }

  private void login(String username, String password) {
    // 登录到服务器
    // ...
  }
}

// MessageActivity.java
public class MessageActivity extends AppCompatActivity {
  private ListView messageList;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_message);

    // 初始化视图
    messageList = (ListView) findViewById(R.id.message_list);

    // 加载留言数据
    loadMessageData();
  }

  private void loadMessageData() {
    // 从JSON数据中加载留言数据
    String jsonData = loadJsonData();
    JSONObject jsonObject = new JSONObject(jsonData);
    JSONArray messages = jsonObject.getJSONArray("messages");

    // 创建留言适配器
    MessageAdapter adapter = new MessageAdapter(this, messages);
    messageList.setAdapter(adapter);
  }
}
```

注意：上述代码仅为示例，需要根据实际需求进行修改和完善。同时，需要实现服务器端的逻辑来处理上传、登录、留言等功能。