以下是一个基本的安卓app源代码结构和JSON数据结构，用于介绍菜品的app：

**安卓app源代码结构：**

1. `MainActivity.java`：主活动，负责展示菜品列表和跳转到详情页面
2. `DetailActivity.java`：详情活动，负责展示菜品详情和上传照片、文字介绍
3. `UploadActivity.java`：上传活动，负责上传照片和文字介绍
4. `LoginActivity.java`：登录活动，负责用户登录
5. `MessageActivity.java`：留言活动，负责展示和发送留言
6. `MenuAdapter.java`：菜品适配器，负责展示菜品列表
7. `MenuModel.java`：菜品模型，负责存储菜品数据
8. `UserModel.java`：用户模型，负责存储用户数据

**JSON数据结构：**

1. `menu.json`：菜品数据，包含菜品名称、价格、介绍、照片等信息
```json
[
  {
    "id": 1,
    "name": "菜品1",
    "price": 10.99,
    "introduction": "这是菜品1的介绍",
    "photo": "https://example.com/menu1.jpg"
  },
  {
    "id": 2,
    "name": "菜品2",
    "price": 9.99,
    "introduction": "这是菜品2的介绍",
    "photo": "https://example.com/menu2.jpg"
  }
]
```
2. `user.json`：用户数据，包含用户名、密码等信息
```json
[
  {
    "id": 1,
    "username": "user1",
    "password": "password1"
  },
  {
    "id": 2,
    "username": "user2",
    "password": "password2"
  }
]
```
3. `message.json`：留言数据，包含留言内容、用户ID等信息
```json
[
  {
    "id": 1,
    "content": "这是留言1的内容",
    "userId": 1
  },
  {
    "id": 2,
    "content": "这是留言2的内容",
    "userId": 2
  }
]
```
**安卓app功能实现：**

1. 菜品列表：使用`MenuAdapter`展示菜品列表，点击菜品项跳转到详情页面
2. 详情页面：使用`DetailActivity`展示菜品详情，包含菜品名称、价格、介绍、照片等信息
3. 上传照片和文字介绍：使用`UploadActivity`上传照片和文字介绍，保存到菜品模型中
4. 登录系统：使用`LoginActivity`实现用户登录，验证用户名和密码
5. 留言系统：使用`MessageActivity`展示和发送留言，保存到留言模型中

**安卓app代码示例：**

`MainActivity.java`：
```java
public class MainActivity extends AppCompatActivity {
    private MenuAdapter menuAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        menuAdapter = new MenuAdapter(this);
        ListView listView = findViewById(R.id.list_view);
        listView.setAdapter(menuAdapter);
    }
}
```
`DetailActivity.java`：
```java
public class DetailActivity extends AppCompatActivity {
    private MenuModel menuModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detail);

        menuModel = (MenuModel) getIntent().getSerializableExtra("menu");
        TextView nameTextView = findViewById(R.id.name_text_view);
        nameTextView.setText(menuModel.getName());
        // ...
    }
}
```
`UploadActivity.java`：
```java
public class UploadActivity extends AppCompatActivity {
    private MenuModel menuModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_upload);

        menuModel = (MenuModel) getIntent().getSerializableExtra("menu");
        // ...
    }

    public void uploadPhoto(View view) {
        // 上传照片代码
    }

    public void uploadIntroduction(View view) {
        // 上传文字介绍代码
    }
}
```
`LoginActivity.java`：
```java
public class LoginActivity extends AppCompatActivity {
    private UserModel userModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        userModel = new UserModel();
        // ...
    }

    public void login(View view) {
        // 登录代码
    }
}
```
`MessageActivity.java`：
```java
public class MessageActivity extends AppCompatActivity {
    private MessageModel messageModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_message);

        messageModel = new MessageModel();
        // ...
    }

    public void sendMessage(View view) {
        // 发送留言代码
    }
}
```
注意：以上代码示例仅为基本结构和功能实现，需要根据具体需求进行修改和完善。