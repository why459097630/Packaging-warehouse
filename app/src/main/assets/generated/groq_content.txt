以下是一个基本的安卓app源代码结构和JSON数据结构，用于介绍菜品的app：

**安卓app源代码结构：**

1. `MainActivity.java`：主活动，负责显示菜品列表和跳转到详细页面
2. `DetailActivity.java`：详细页面，负责显示菜品详细信息和上传照片
3. `UploadActivity.java`：上传页面，负责上传照片和文字介绍
4. `LoginActivity.java`：登录页面，负责用户登录
5. `MessageActivity.java`：留言页面，负责显示和发送留言
6. `MenuAdapter.java`：菜品适配器，负责显示菜品列表
7. `MenuModel.java`：菜品模型，负责存储菜品信息

**JSON数据结构：**

```json
{
  "menu": [
    {
      "id": 1,
      "name": "菜品1",
      "price": 10.99,
      "description": "这是菜品1的描述",
      "image": "https://example.com/image1.jpg",
      "comments": [
        {
          "id": 1,
          "username": "用户1",
          "content": "这道菜很好吃"
        },
        {
          "id": 2,
          "username": "用户2",
          "content": "我也很喜欢这道菜"
        }
      ]
    },
    {
      "id": 2,
      "name": "菜品2",
      "price": 9.99,
      "description": "这是菜品2的描述",
      "image": "https://example.com/image2.jpg",
      "comments": [
        {
          "id": 3,
          "username": "用户3",
          "content": "这道菜不错"
        }
      ]
    }
  ],
  "users": [
    {
      "id": 1,
      "username": "用户1",
      "password": "密码1"
    },
    {
      "id": 2,
      "username": "用户2",
      "password": "密码2"
    }
  ]
}
```

**安卓app源代码：**

```java
// MainActivity.java
public class MainActivity extends AppCompatActivity {
  private ListView listView;
  private MenuAdapter adapter;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    listView = (ListView) findViewById(R.id.listView);
    adapter = new MenuAdapter(this, getMenuData());
    listView.setAdapter(adapter);

    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
      @Override
      public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        Intent intent = new Intent(MainActivity.this, DetailActivity.class);
        intent.putExtra("menuId", position);
        startActivity(intent);
      }
    });
  }

  private List<MenuModel> getMenuData() {
    // 从JSON数据中解析菜品列表
    List<MenuModel> menuList = new ArrayList<>();
    // ...
    return menuList;
  }
}

// DetailActivity.java
public class DetailActivity extends AppCompatActivity {
  private TextView nameTextView;
  private TextView priceTextView;
  private TextView descriptionTextView;
  private ImageView imageView;
  private Button uploadButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_detail);

    nameTextView = (TextView) findViewById(R.id.nameTextView);
    priceTextView = (TextView) findViewById(R.id.priceTextView);
    descriptionTextView = (TextView) findViewById(R.id.descriptionTextView);
    imageView = (ImageView) findViewById(R.id.imageView);
    uploadButton = (Button) findViewById(R.id.uploadButton);

    Intent intent = getIntent();
    int menuId = intent.getIntExtra("menuId", 0);

    // 从JSON数据中解析菜品详细信息
    MenuModel menuModel = getMenuModel(menuId);
    nameTextView.setText(menuModel.getName());
    priceTextView.setText(String.valueOf(menuModel.getPrice()));
    descriptionTextView.setText(menuModel.getDescription());
    imageView.setImageResource(menuModel.getImage());

    uploadButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View v) {
        Intent intent = new Intent(DetailActivity.this, UploadActivity.class);
        startActivity(intent);
      }
    });
  }

  private MenuModel getMenuModel(int menuId) {
    // 从JSON数据中解析菜品模型
    MenuModel menuModel = new MenuModel();
    // ...
    return menuModel;
  }
}

// UploadActivity.java
public class UploadActivity extends AppCompatActivity {
  private EditText descriptionEditText;
  private Button uploadButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_upload);

    descriptionEditText = (EditText) findViewById(R.id.descriptionEditText);
    uploadButton = (Button) findViewById(R.id.uploadButton);

    uploadButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View v) {
        String description = descriptionEditText.getText().toString();
        // 上传照片和文字介绍
        // ...
      }
    });
  }
}

// LoginActivity.java
public class LoginActivity extends AppCompatActivity {
  private EditText usernameEditText;
  private EditText passwordEditText;
  private Button loginButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);

    usernameEditText = (EditText) findViewById(R.id.usernameEditText);
    passwordEditText = (EditText) findViewById(R.id.passwordEditText);
    loginButton = (Button) findViewById(R.id.loginButton);

    loginButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View v) {
        String username = usernameEditText.getText().toString();
        String password = passwordEditText.getText().toString();
        // 登录验证
        // ...
      }
    });
  }
}

// MessageActivity.java
public class MessageActivity extends AppCompatActivity {
  private ListView listView;
  private MessageAdapter adapter;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_message);

    listView = (ListView) findViewById(R.id.listView);
    adapter = new MessageAdapter(this, getMessageData());
    listView.setAdapter(adapter);

    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
      @Override
      public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        // 显示留言详细信息
        // ...
      }
    });
  }

  private List<MessageModel> getMessageData() {
    // 从JSON数据中解析留言列表
    List<MessageModel> messageList = new ArrayList<>();
    // ...
    return messageList;
  }
}
```

注意：上述代码仅为示例，需要根据实际需求进行修改和补充。同时，需要实现登录验证、上传照片和文字介绍、显示留言详细信息等功能。