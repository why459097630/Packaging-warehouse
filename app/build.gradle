// HOOK:BEFORE_BUILD
// END_HOOK

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def kotlinAlignVersion = "1.9.24" // 与 Compose Compiler 1.5.14 匹配

// --- NDJC tokens fallback resolver (keeps anchors working) ---
def ndjcToken = { String token -> token != null && token.startsWith("NDJC:") }  // 是否仍是占位符

// String: RUN_ID
def _RUN_ID_TOKEN = "1"
def _RUN_ID = ndjcToken(_RUN_ID_TOKEN)
        ? (findProperty("NDJC_RUN_ID") ?: System.getenv("NDJC_RUN_ID") ?: "local-run")
        : _RUN_ID_TOKEN

// String: LOG_LEVEL
def _LOG_LEVEL_TOKEN = "debug"
def _LOG_LEVEL = ndjcToken(_LOG_LEVEL_TOKEN)
        ? (findProperty("NDJC_LOG_LEVEL") ?: System.getenv("NDJC_LOG_LEVEL") ?: "INFO")
        : _LOG_LEVEL_TOKEN

// Boolean: DEBUG_LOG_ENABLED（支持 1/true/yes/y）
def _DEBUG_TOKEN = "true"
def _DEBUG_BOOL = {
    def v = (findProperty("NDJC_DEBUG_LOG_ENABLED") ?: System.getenv("NDJC_DEBUG_LOG_ENABLED") ?: "false")
            .toString().trim().toLowerCase()
    return (v in ["1","true","yes","y"])
}
def _DEBUG_ENABLED = ndjcToken(_DEBUG_TOKEN) ? _DEBUG_BOOL() : _DEBUG_TOKEN

// Package: PACKAGE_NAME（锚点未注入时使用兜底，避免 Manifest 合并报错）
def _PKG_TOKEN = "com.example.dtxcanteen"
def _PKG = ndjcToken(_PKG_TOKEN) ? "com.ndjc.app" : _PKG_TOKEN
// --- end resolver ---

android {
    // 固定 R 的归属，避免因包名变动导致 R 对不上
    namespace "com.ndjc.app"

    compileSdk 34                            // NDJC:COMPILE_SDK（如需可扩展为文本锚点）

    defaultConfig {
        // 仅 applicationId 走锚点；未注入时回退到 com.ndjc.app
        applicationId _PKG
        minSdk 24                            // NDJC:MIN_SDK
        targetSdk 34                         // NDJC:TARGET_SDK
        versionCode 1                        // NDJC:VERSION_CODE
        versionName "1.0.0"                  // NDJC:VERSION_NAME

        // --- 使用兜底后的值；字符串要带引号，布尔不带引号 ---
        buildConfigField "String",  "NDJC_RUN_ID",     "\"${_RUN_ID}\""
        buildConfigField "String",  "NDJC_LOG_LEVEL",  "\"${_LOG_LEVEL}\""
        buildConfigField "boolean", "NDJC_DEBUG_LOG",  "${_DEBUG_ENABLED}"
    }

    // LIST:ABI_SPLITS
    // ${ITEM}
    // END_LIST

    packagingOptions {
        // LIST:PACKAGING_RULES
        // ${ITEM}
        // END_LIST
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // LIST:PROGUARD_EXTRA
            // ${ITEM}
            // END_LIST
            signingConfig signingConfigs.debug
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += [
            "-Xjvm-default=all",
            // 可按需追加 Compose/Material 实验开关
        ]
    }
}

kotlin {
    jvmToolchain(17)
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == "org.jetbrains.kotlin") {
            details.useVersion(kotlinAlignVersion)
            details.because("Align Kotlin stdlib to ${kotlinAlignVersion} for Compose Compiler 1.5.14")
        }
    }
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.4"

    implementation platform("androidx.compose:compose-bom:2024.06.00")
    implementation "androidx.activity:activity-compose:1.9.2"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.navigation:navigation-compose:2.8.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.4"
    implementation "androidx.core:core-ktx:1.13.1"
    implementation "com.google.android.material:material:1.12.0"

    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    // BLOCK:DEPENDENCY_SNIPPETS
<!-- xml or kotlin snippet -->
// END_BLOCK
}

/* 可选：把转场或广告位等构建期摘要放到这里 */
 // BLOCK:BUILD_SUMMARY
<!-- xml or kotlin snippet -->
// END_BLOCK

 // BLOCK:HEADER_AD_SLOT
<!-- xml or kotlin snippet -->
// END_BLOCK

// HOOK:AFTER_BUILD
// END_HOOK

// HOOK:PRE_INJECT
// END_HOOK

// HOOK:POST_INJECT
// END_HOOK

// HOOK:PRE_COMMIT
// END_HOOK

// HOOK:AFTER_INSTALL
// END_HOOK
