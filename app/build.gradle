// app/build.gradle

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //             // text 锚点
}

android {
    namespace "com.ndjc.app"                 //
    compileSdk 34                            // 34

    defaultConfig {
        applicationId "com.ndjc.app"         // com.ndjc.demo.core /
        minSdk 24                            // 24
        targetSdk 34                         // 34
        versionCode 1                        // 1
        versionName "1.0.0"                  // 1.0.0

        // 生成器可在此追加更多 BuildConfig 字段

        // ===== BuildConfig 常量（TEXT 锚点落位）=====
        // —— 网络基础
        buildConfigField "String", "API_BASE", "\"https://api.example.com\""
        buildConfigField "int", "HTTP_TIMEOUT_MS", "15000"
        buildConfigField "int", "HTTP_LOG_LEVEL", "1"
        buildConfigField "int", "RETRY_BACKOFF_MS", "2000"

        // —— 启动编排
        buildConfigField "String", "STARTUP_LIBS", "\"\""
        buildConfigField "String", "STARTUP_INITIALIZERS", "\"\""

        // —— 主题 / 语言 / 构建风味
        buildConfigField "String", "APP_THEME_MODE", "\"system\""
        buildConfigField "String", "DEFAULT_LANGUAGE", "\"en\""
        buildConfigField "String", "SUPPORTED_LANGUAGES", "\"en,zh-CN\""
        buildConfigField "String", "BUILD_FLAVOR", "\"prod\""

        // —— 数据/名称
        buildConfigField "String", "DB_NAME", "\"ndjc.db\""
        buildConfigField "String", "DATASTORE_NAME", "\"ndjc_store\""
        buildConfigField "String", "WORK_NAME", "\"ndjc_worker\""
        buildConfigField "String", "ROUTER_TABLE_PKG", "\"com.ndjc.app\""

        // —— 网络/缓存/重试策略
        buildConfigField "int", "CACHE_MAX_AGE", "300"
        buildConfigField "int", "COIL_DISK_CACHE_MB", "256"
        buildConfigField "int", "RETRY_MAX_RETRIES", "3"
        buildConfigField "String", "REFRESH_TOKEN_STRATEGY", "\"auto\""

        // —— 远程配置/功能开关
        buildConfigField "String", "FEATURE_FLAG_FILE", "\"flags.json\""

        // —— 导航/分页
        buildConfigField "String", "NAV_ARG_ITEM_ID", "\"id\""
        buildConfigField "int", "PAGING_PAGE_SIZE", "20"

        // —— 首次体验 / 变更日志
        buildConfigField "String", "ONBOARDING_STEPS", "\"welcome,permission,done\""
        buildConfigField "String", "CHANGELOG_URL", "\"https://example.com/changelog\""

        // —— 推送 / 计费
        buildConfigField "String", "PUSH_ENDPOINT", "\"https://push.example.com/register\""
        buildConfigField "String", "PUSH_SENDER_ID", "\"\""
        buildConfigField "String", "BILLING_IAP_SKU", "\"sku_iap_basic\""
        buildConfigField "String", "BILLING_SUBS_SKU", "\"subs_premium_month\""

        // —— 图片
        buildConfigField "String", "IMAGE_BASE_URL", "\"https://img.example.com/\""

        // —— 其他展示/法务/支持
        buildConfigField "String", "SUPPORT_EMAIL", "\"support@example.com\""
        buildConfigField "String", "TERMS_VERSION", "\"1.0\""

        // ===== Manifest 占位符（TEXT 锚点落位）=====
        manifestPlaceholders = (manifestPlaceholders ?: [:])
        manifestPlaceholders += [ FILE_PROVIDER_AUTH: "${applicationId}.fileprovider" ]
        manifestPlaceholders += [
            APP_LINKS_DOMAIN: "example.com",
            DEEPLINK_HOST  : "open",
            DEEPLINK_SCHEME: "ndjc"
        ]
        manifestPlaceholders += [
            MAPS_API_KEY        : "",
            BILLING_LICENSE_KEY : "",
            PLAY_INTEGRITY_TOKEN: ""
        ]
        manifestPlaceholders += [
            REVIEW_FLOW    : "inapp",
            APP_UPDATE_MODE: "flexible",
            AD_SDK_ID      : ""
        ]
        manifestPlaceholders += [
            PRIVACY_POLICY_URL: "https://example.com/privacy",
            TERMS_URL         : "https://example.com/terms",
            SHORTCUTS_COUNT   : "0"
        ]

        // ✅ 方案 A：为渠道/环境提供默认值（支持环境变量覆盖）
        manifestPlaceholders += [
            META_CHANNEL: System.getenv('NDJC_META_CHANNEL') ?: 'official',
            META_ENV    : System.getenv('NDJC_META_ENV')     ?: 'prod'
        ]
    }

    signingConfigs {
        release {
            def disabled = (System.getenv('NDJC_SIGNING_DISABLED') ?: '0') == '1'
            def keystore = System.getenv('NDJC_KEYSTORE_PATH') ?: ''
            if (!disabled && keystore?.trim()) {
                storeFile(file(keystore))
                storePassword(System.getenv('NDJC_KEYSTORE_PASSWORD') ?: '')
                keyAlias(System.getenv('NDJC_KEY_ALIAS') ?: '')
                keyPassword(System.getenv('NDJC_KEY_PASSWORD') ?: '')
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //       // text 锚点
            signingConfig signingConfigs.release // signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
        }
    }

    // 资源/打包
    // resConfigs 'en', 'zh-rCN', 'zh-rTW'
    //

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'                    //
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3' //
    }

    testOptions {
    }

    // 多渠道/风味（如需）
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'

    // Compose
    implementation platform('androidx.compose:compose-bom:2024.05.00')
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.material3:material3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // 导航
    implementation 'androidx.navigation:navigation-compose:2.7.7'     //

    // 数据存储 & 工作任务
    implementation 'androidx.datastore:datastore-preferences:1.1.1'    //
    implementation 'androidx.work:work-runtime-ktx:2.9.0'              //

    // 网络 & 日志
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'                //
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'   //

    // 第三方/自定义依赖位
    //

    // 测试
    testImplementation 'junit:junit:4.13.2'
}
