{
  "runId": "ndjc-1761390402094-bd0703809169",
  "timestamp": "2025-10-25T11:06:56.932Z",
  "template": "circle-basic",
  "mode": "A",
  "phase1": {
    "raw": {
      "metadata": {
        "NDJC:BUILD_META:RUNID": "run_20231025_001",
        "template": "circle-basic",
        "appName": "Circle",
        "packageId": "com.social.circleapp",
        "mode": "A"
      },
      "anchorsGrouped": {
        "text": {
          "NDJC:PACKAGE_NAME": "com.social.circleapp",
          "NDJC:APP_LABEL": "Circle",
          "NDJC:HOME_TITLE": "Home Feed",
          "NDJC:PRIMARY_BUTTON_TEXT": "Post",
          "NDJC:THEME_NAME": "Light",
          "NDJC:DARK_MODE": "false",
          "NDJC:FONT_FAMILY_PRIMARY": "Roboto",
          "NDJC:FONT_FAMILY_SECONDARY": "Sans Serif",
          "NDJC:I18N_ENABLED": "true",
          "NDJC:ANIM_ENABLED": "true",
          "NDJC:ANIM_DURATION_MS": "300",
          "NDJC:LAYOUT_DENSITY": "mdpi",
          "NDJC:DATA_SOURCE": "https://api.socialapp.com",
          "NDJC:SEED_ENABLED": "false",
          "NDJC:FEED_SORT": "newest",
          "NDJC:PAGING_SIZE": "20",
          "NDJC:OFFLINE_POLICY": "cache",
          "NDJC:PRIVACY_POLICY": "https://socialapp.com/privacy",
          "NDJC:DRAFT_ENABLED": "true",
          "NDJC:USE_APP_BUNDLE": "true",
          "NDJC:BUILD_META:RUNID": "run_20231025_001",
          "NDJC:FEATURE_TOGGLE:MIN": "1",
          "NDJC:DEBUG_LOG_ENABLED": "false",
          "NDJC:LOG_LEVEL": "INFO",
          "NDJC:CRASHLYTICS_ENABLED": "true",
          "NDJC:EXPERIMENT_BUCKET": "A",
          "NDJC:THEME_COLORS": {
            "primary": "#7C3AED",
            "secondary": "#10B981"
          },
          "NDJC:TYPOCASE_OVERRIDES": "{}",
          "NDJC:STRINGS_EXTRA": {},
          "NDJC:ROUTE_HOME": "home",
          "NDJC:ROUTE_DETAIL": "detail",
          "NDJC:ENABLE_POSTING": "true",
          "NDJC:ENABLE_COMMENTS": "true",
          "NDJC:ENABLE_LIKES": "true",
          "NDJC:PROFILE_EDIT_ENABLED": "true",
          "NDJC:NOTIFICATIONS_ENABLED": "true"
        },
        "list": {
          "LIST:ROUTES": [
            "home",
            "profile",
            "post_detail"
          ],
          "LIST:DEPENDENCY_SNIPPETS": [],
          "LIST:PROGUARD_EXTRA": [],
          "LIST:PACKAGING_RULES": [],
          "LIST:POST_FIELDS": [],
          "LIST:PLURAL_STRINGS": [],
          "LIST:COMPONENT_STYLES": [],
          "LIST:DEEPLINK_PATTERNS": [],
          "LIST:NETWORK_CLEAR_TEXT": [],
          "LIST:RES_CONFIGS_OVERRIDE": [],
          "LIST:COMMENT_FIELDS": [],
          "LIST:FEED_QUERY_PARAMS": [],
          "LIST:PROFILE_FIELDS": [],
          "LIST:NOTIFICATION_TYPES": [],
          "LIST:UPLOAD_MIME_TYPES": []
        },
        "if": {
          "IF:NAV_TRANSITIONS": false,
          "IF:BUILD_SUMMARY": false,
          "IF:NATIVE_SPLITS": false,
          "IF:AFTER_BUILD": false,
          "IF:PRE_COMMIT": false,
          "IF:AFTER_INSTALL": false,
          "IF:BEFORE_BUILD": false,
          "IF:POST_INJECT": false,
          "IF:BEFORE_BUNDLE": false,
          "IF:AFTER_BUNDLE": false,
          "IF:ENABLE_POSTING": true,
          "IF:ENABLE_COMMENTS": true,
          "IF:ENABLE_LIKES": true,
          "IF:REQUIRE_LOGIN": true,
          "IF:SHOW_NOTIFICATIONS": true
        },
        "gradle": {
          "applicationId": "com.social.circleapp",
          "resConfigs": [
            "en",
            "zh-rCN"
          ],
          "permissions": [
            "android.permission.INTERNET",
            "android.permission.ACCESS_NETWORK_STATE"
          ]
        }
      },
      "files": []
    },
    "checked": {
      "metadata": {
        "NDJC:BUILD_META:RUNID": "run_20231025_001",
        "template": "circle-basic",
        "appName": "Circle",
        "packageId": "com.social.circleapp",
        "mode": "A"
      },
      "anchorsGrouped": {
        "text": {
          "NDJC:PACKAGE_NAME": "com.social.circleapp",
          "NDJC:APP_LABEL": "Circle",
          "NDJC:HOME_TITLE": "Home Feed",
          "NDJC:PRIMARY_BUTTON_TEXT": "Post",
          "NDJC:THEME_NAME": "Light",
          "NDJC:DARK_MODE": "false",
          "NDJC:FONT_FAMILY_PRIMARY": "Roboto",
          "NDJC:FONT_FAMILY_SECONDARY": "Sans Serif",
          "NDJC:I18N_ENABLED": "true",
          "NDJC:ANIM_ENABLED": "true",
          "NDJC:ANIM_DURATION_MS": "300",
          "NDJC:LAYOUT_DENSITY": "mdpi",
          "NDJC:DATA_SOURCE": "https://api.socialapp.com",
          "NDJC:SEED_ENABLED": "false",
          "NDJC:FEED_SORT": "newest",
          "NDJC:PAGING_SIZE": "20",
          "NDJC:OFFLINE_POLICY": "cache",
          "NDJC:PRIVACY_POLICY": "https://socialapp.com/privacy",
          "NDJC:DRAFT_ENABLED": "true",
          "NDJC:USE_APP_BUNDLE": "true",
          "NDJC:BUILD_META:RUNID": "run_20231025_001",
          "NDJC:FEATURE_TOGGLE:MIN": "1",
          "NDJC:DEBUG_LOG_ENABLED": "false",
          "NDJC:LOG_LEVEL": "INFO",
          "NDJC:CRASHLYTICS_ENABLED": "true",
          "NDJC:EXPERIMENT_BUCKET": "A",
          "NDJC:THEME_COLORS": {
            "primary": "#7C3AED",
            "secondary": "#10B981"
          },
          "NDJC:TYPOCASE_OVERRIDES": "{}",
          "NDJC:STRINGS_EXTRA": {},
          "NDJC:ROUTE_HOME": "home",
          "NDJC:ROUTE_DETAIL": "detail",
          "NDJC:ENABLE_POSTING": "true",
          "NDJC:ENABLE_COMMENTS": "true",
          "NDJC:ENABLE_LIKES": "true",
          "NDJC:PROFILE_EDIT_ENABLED": "true",
          "NDJC:NOTIFICATIONS_ENABLED": "true"
        },
        "list": {
          "LIST:ROUTES": [
            "home",
            "profile",
            "post_detail"
          ],
          "LIST:DEPENDENCY_SNIPPETS": [],
          "LIST:PROGUARD_EXTRA": [],
          "LIST:PACKAGING_RULES": [],
          "LIST:POST_FIELDS": [],
          "LIST:PLURAL_STRINGS": [],
          "LIST:COMPONENT_STYLES": [],
          "LIST:DEEPLINK_PATTERNS": [],
          "LIST:NETWORK_CLEAR_TEXT": [],
          "LIST:RES_CONFIGS_OVERRIDE": [],
          "LIST:COMMENT_FIELDS": [],
          "LIST:FEED_QUERY_PARAMS": [],
          "LIST:PROFILE_FIELDS": [],
          "LIST:NOTIFICATION_TYPES": [],
          "LIST:UPLOAD_MIME_TYPES": []
        },
        "if": {
          "IF:NAV_TRANSITIONS": false,
          "IF:BUILD_SUMMARY": false,
          "IF:NATIVE_SPLITS": false,
          "IF:AFTER_BUILD": false,
          "IF:PRE_COMMIT": false,
          "IF:AFTER_INSTALL": false,
          "IF:BEFORE_BUILD": false,
          "IF:POST_INJECT": false,
          "IF:BEFORE_BUNDLE": false,
          "IF:AFTER_BUNDLE": false,
          "IF:ENABLE_POSTING": true,
          "IF:ENABLE_COMMENTS": true,
          "IF:ENABLE_LIKES": true,
          "IF:REQUIRE_LOGIN": true,
          "IF:SHOW_NOTIFICATIONS": true
        },
        "gradle": {
          "applicationId": "com.social.circleapp",
          "resConfigs": [
            "en",
            "zh-rCN"
          ],
          "permissions": [
            "android.permission.INTERNET",
            "android.permission.ACCESS_NETWORK_STATE"
          ]
        }
      },
      "files": []
    },
    "issues": []
  },
  "phase2": {
    "raw": {
      "metadata": {
        "NDJC:BUILD_META:RUNID": "run_20231025_001"
      },
      "anchorsGrouped": {
        "text": {
          "NDJC:PACKAGE_NAME": "com.social.circleapp",
          "NDJC:APP_LABEL": "Circle",
          "NDJC:HOME_TITLE": "Home Feed",
          "NDJC:PRIMARY_BUTTON_TEXT": "Post",
          "NDJC:THEME_NAME": "Light",
          "NDJC:DARK_MODE": "false",
          "NDJC:FONT_FAMILY_PRIMARY": "Roboto",
          "NDJC:FONT_FAMILY_SECONDARY": "Sans Serif",
          "NDJC:I18N_ENABLED": "true",
          "NDJC:ANIM_ENABLED": "true",
          "NDJC:ANIM_DURATION_MS": "300",
          "NDJC:LAYOUT_DENSITY": "mdpi",
          "NDJC:DATA_SOURCE": "https://api.socialapp.com",
          "NDJC:SEED_ENABLED": "false",
          "NDJC:FEED_SORT": "newest",
          "NDJC:PAGING_SIZE": "20",
          "NDJC:OFFLINE_POLICY": "cache",
          "NDJC:PRIVACY_POLICY": "https://socialapp.com/privacy",
          "NDJC:DRAFT_ENABLED": "true",
          "NDJC:USE_APP_BUNDLE": "true",
          "NDJC:BUILD_META:RUNID": "run_20231025_001",
          "NDJC:FEATURE_TOGGLE:MIN": "1",
          "NDJC:DEBUG_LOG_ENABLED": "false",
          "NDJC:LOG_LEVEL": "INFO",
          "NDJC:CRASHLYTICS_ENABLED": "true",
          "NDJC:EXPERIMENT_BUCKET": "A",
          "NDJC:THEME_COLORS": {
            "primary": "#7C3AED",
            "secondary": "#10B981"
          },
          "NDJC:TYPOCASE_OVERRIDES": "{}",
          "NDJC:STRINGS_EXTRA": {},
          "NDJC:ROUTE_HOME": "home",
          "NDJC:ROUTE_DETAIL": "detail",
          "NDJC:ENABLE_POSTING": "true",
          "NDJC:ENABLE_COMMENTS": "true",
          "NDJC:ENABLE_LIKES": "true",
          "NDJC:PROFILE_EDIT_ENABLED": "true",
          "NDJC:NOTIFICATIONS_ENABLED": "true"
        },
        "list": {
          "LIST:ROUTES": [
            "home",
            "profile",
            "post_detail"
          ],
          "LIST:DEPENDENCY_SNIPPETS": [],
          "LIST:PROGUARD_EXTRA": [],
          "LIST:PACKAGING_RULES": [],
          "LIST:POST_FIELDS": [],
          "LIST:PLURAL_STRINGS": [],
          "LIST:COMPONENT_STYLES": [],
          "LIST:DEEPLINK_PATTERNS": [],
          "LIST:NETWORK_CLEAR_TEXT": [],
          "LIST:RES_CONFIGS_OVERRIDE": [],
          "LIST:COMMENT_FIELDS": [],
          "LIST:FEED_QUERY_PARAMS": [],
          "LIST:PROFILE_FIELDS": [],
          "LIST:NOTIFICATION_TYPES": [],
          "LIST:UPLOAD_MIME_TYPES": []
        },
        "if": {
          "IF:NAV_TRANSITIONS": false,
          "IF:BUILD_SUMMARY": false,
          "IF:NATIVE_SPLITS": false,
          "IF:AFTER_BUILD": false,
          "IF:PRE_COMMIT": false,
          "IF:AFTER_INSTALL": false,
          "IF:BEFORE_BUILD": false,
          "IF:POST_INJECT": false,
          "IF:BEFORE_BUNDLE": false,
          "IF:AFTER_BUNDLE": false,
          "IF:ENABLE_POSTING": true,
          "IF:ENABLE_COMMENTS": true,
          "IF:ENABLE_LIKES": true,
          "IF:REQUIRE_LOGIN": true,
          "IF:SHOW_NOTIFICATIONS": true
        },
        "gradle": {
          "applicationId": "com.social.circleapp",
          "resConfigs": [
            "en",
            "zh-rCN"
          ],
          "permissions": [
            "android.permission.INTERNET",
            "android.permission.ACCESS_NETWORK_STATE"
          ]
        },
        "block": {
          "BLOCK:HOME_HEADER": "@Composable fun HomeHeader(){ TopAppBar(title = { Text(\\\"Circle\\\") }, navigationIcon = { IconButton(onClick = { /*TODO*/ }) { Icon(Icons.Default.Menu, contentDescription = null) } }) }",
          "BLOCK:HOME_BODY": "@Composable fun HomeBody(posts: List<Post>){ LazyColumn{ items(posts){ post -> PostCard(post) } } }",
          "BLOCK:HOME_ACTIONS": "@Composable fun HomeActions(onPostClick: ()->Unit){ Row{ Spacer(Modifier.weight(1f)); Button(onClick = onPostClick){ Text(\\\"Post\\\") } } }",
          "BLOCK:SPLASH_CONTENT": "@Composable fun SplashScreen(){ Box(Modifier.fillMaxSize(), contentAlignment = Alignment.Center){ Image(painterResource(R.drawable.splash), contentDescription = null) } }",
          "BLOCK:EMPTY_STATE": "@Composable fun EmptyState(){ Column(Modifier.fillMaxSize(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center){ Icon(Icons.Default.Inbox, contentDescription = null); Text(\\\"No posts yet\\\") } }",
          "BLOCK:ERROR_STATE": "@Composable fun ErrorState(message: String, onRetry: ()->Unit){ Column(Modifier.fillMaxSize(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center){ Text(message, color = Color.Red); Button(onClick = onRetry){ Text(\\\"Retry\\\") } } }",
          "BLOCK:DEBUG_PANEL": "@Composable fun DebugPanel(info: String){ Box(Modifier.fillMaxWidth().background(Color.LightGray).padding(8.dp)){ Text(info, style = MaterialTheme.typography.caption) } }",
          "BLOCK:HEADER_AD_SLOT": "@Composable fun HeaderAd(){ Box(Modifier.height(50.dp).fillMaxWidth().background(Color.Gray)){ Text(\\\"Ad\\\", Modifier.align(Alignment.Center)) } }",
          "BLOCK:USER_PROFILE_CARD": "@Composable fun UserProfileCard(user: User){ Card{ Column(Modifier.padding(16.dp)){ Text(user.name, style = MaterialTheme.typography.h6); Text(user.bio, style = MaterialTheme.typography.body2) } } }",
          "BLOCK:SPONSORED_CARD": "@Composable fun SponsoredCard(ad: Ad){ Card{ Column{ Image(painterResource(ad.imageRes), contentDescription = null); Text(ad.title); Text(ad.description) } } }",
          "BLOCK:PROFILE_SECTION": "@Composable fun ProfileSection(user: User){ Column{ UserProfileCard(user); Divider(); // other sections } }",
          "BLOCK:SETTINGS_SECTION": "@Composable fun SettingsSection(settings: List<Setting>){ Column{ settings.forEach{ SettingItem(it) } } }",
          "BLOCK:SETTINGS_SECTION:EXTRA": "@Composable fun SettingsExtra(extraInfo: String){ Text(extraInfo, style = MaterialTheme.typography.body2) }",
          "BLOCK:POST_COMPOSER": "@Composable fun PostComposer(onPost: (String)->Unit){ var text by remember { mutableStateOf(\\\"\\\") }; Column{ TextField(value = text, onValueChange = { text = it }, label = { Text(\\\"Write something...\\\") }); Button(onClick = { onPost(text) }){ Text(\\\"Post\\\") } } }",
          "BLOCK:POST_CARD": "@Composable fun PostCard(post: Post){ Card{ Column(Modifier.padding(8.dp)){ Text(post.author, style = MaterialTheme.typography.subtitle2); Text(post.content); if(post.imageUrl != null){ Image(painterResource(post.imageUrl), contentDescription = null) } LikeButton(post) } } }",
          "BLOCK:FEED_LIST": "@Composable fun FeedList(posts: List<Post>){ LazyColumn{ items(posts){ post -> PostCard(post) } } }",
          "BLOCK:POST_DETAIL": "@Composable fun PostDetail(post: Post){ Column{ Text(post.title, style = MaterialTheme.typography.h5); Text(post.content); if(post.imageUrl != null){ Image(painterResource(post.imageUrl), contentDescription = null) } CommentsScreen(post.id) } }",
          "BLOCK:COMMENTS_SCREEN": "@Composable fun CommentsScreen(postId: String){ // fetch and display comments }",
          "BLOCK:COMMENT_ITEM": "@Composable fun CommentItem(comment: Comment){ Row{ Text(comment.author); Spacer(Modifier.width(8.dp)); Text(comment.text) } }",
          "BLOCK:LIKE_BUTTON": "@Composable fun LikeButton(post: Post){ var liked by remember { mutableStateOf(post.liked) }; IconButton(onClick = { liked = !liked }){ Icon(if(liked) Icons.Default.Favorite else Icons.Default.FavoriteBorder, contentDescription = null) } }",
          "BLOCK:NOTIFICATIONS_SCREEN": "@Composable fun NotificationsScreen(notifications: List<Notification>){ LazyColumn{ items(notifications){ n -> NotificationItem(n) } } }",
          "BLOCK:EDIT_PROFILE_SCREEN": "@Composable fun EditProfileScreen(user: User, onSave: (User)->Unit){ // UI for editing profile }",
          "BLOCK:SEARCH_SCREEN": "@Composable fun SearchScreen(onSearch: (String)->Unit){ var query by remember { mutableStateOf(\\\"\\\") }; Column{ TextField(value = query, onValueChange = { query = it }, label = { Text(\\\"Search\\\") }); Button(onClick = { onSearch(query) }){ Text(\\\"Go\\\") } } }",
          "BLOCK:MEDIA_PICKER": "@Composable fun MediaPicker(onMediaSelected: (Uri)->Unit){ // UI to pick images or videos }"
        },
        "hook": {
          "HOOK:INTENT_SHARE": "noop",
          "HOOK:FILE_PROVIDER": "noop",
          "HOOK:PERMISSIONS:ON_REQUEST": "noop",
          "HOOK:PRE_COMMIT:HOOK": "noop",
          "HOOK:POST_BUILD:HOOK": "noop",
          "HOOK:AFTER_INSTALL:HOOK": "noop",
          "HOOK:POST_SUBMIT": "noop",
          "HOOK:FETCH_FEED": "noop",
          "HOOK:FETCH_POST": "noop",
          "HOOK:FETCH_COMMENTS": "noop",
          "HOOK:COMMENT_SUBMIT": "noop",
          "HOOK:LIKE_TOGGLE": "noop",
          "HOOK:UPLOAD_MEDIA": "noop",
          "HOOK:FETCH_NOTIFICATIONS": "noop"
        }
      },
      "files": []
    },
    "checked": {
      "metadata": {
        "NDJC:BUILD_META:RUNID": "run_20231025_001",
        "runId": "run_20231025_001"
      },
      "anchorsGrouped": {
        "text": {
          "NDJC:PACKAGE_NAME": "com.social.circleapp",
          "NDJC:APP_LABEL": "Circle",
          "NDJC:HOME_TITLE": "Home Feed",
          "NDJC:PRIMARY_BUTTON_TEXT": "Post",
          "NDJC:THEME_NAME": "Light",
          "NDJC:DARK_MODE": "false",
          "NDJC:FONT_FAMILY_PRIMARY": "Roboto",
          "NDJC:FONT_FAMILY_SECONDARY": "Sans Serif",
          "NDJC:I18N_ENABLED": "true",
          "NDJC:ANIM_ENABLED": "true",
          "NDJC:ANIM_DURATION_MS": "300",
          "NDJC:LAYOUT_DENSITY": "mdpi",
          "NDJC:DATA_SOURCE": "https://api.socialapp.com",
          "NDJC:SEED_ENABLED": "false",
          "NDJC:FEED_SORT": "newest",
          "NDJC:PAGING_SIZE": "20",
          "NDJC:OFFLINE_POLICY": "cache",
          "NDJC:PRIVACY_POLICY": "https://socialapp.com/privacy",
          "NDJC:DRAFT_ENABLED": "true",
          "NDJC:USE_APP_BUNDLE": "true",
          "NDJC:BUILD_META:RUNID": "run_20231025_001",
          "NDJC:FEATURE_TOGGLE:MIN": "1",
          "NDJC:DEBUG_LOG_ENABLED": "false",
          "NDJC:LOG_LEVEL": "INFO",
          "NDJC:CRASHLYTICS_ENABLED": "true",
          "NDJC:EXPERIMENT_BUCKET": "A",
          "NDJC:THEME_COLORS": {
            "primary": "#7C3AED",
            "secondary": "#10B981"
          },
          "NDJC:TYPOCASE_OVERRIDES": "{}",
          "NDJC:STRINGS_EXTRA": {},
          "NDJC:ROUTE_HOME": "home",
          "NDJC:ROUTE_DETAIL": "detail",
          "NDJC:ENABLE_POSTING": "true",
          "NDJC:ENABLE_COMMENTS": "true",
          "NDJC:ENABLE_LIKES": "true",
          "NDJC:PROFILE_EDIT_ENABLED": "true",
          "NDJC:NOTIFICATIONS_ENABLED": "true"
        },
        "list": {
          "LIST:ROUTES": [
            "home",
            "profile",
            "post_detail"
          ],
          "LIST:DEPENDENCY_SNIPPETS": [],
          "LIST:PROGUARD_EXTRA": [],
          "LIST:PACKAGING_RULES": [],
          "LIST:POST_FIELDS": [],
          "LIST:PLURAL_STRINGS": [],
          "LIST:COMPONENT_STYLES": [],
          "LIST:DEEPLINK_PATTERNS": [],
          "LIST:NETWORK_CLEAR_TEXT": [],
          "LIST:RES_CONFIGS_OVERRIDE": [],
          "LIST:COMMENT_FIELDS": [],
          "LIST:FEED_QUERY_PARAMS": [],
          "LIST:PROFILE_FIELDS": [],
          "LIST:NOTIFICATION_TYPES": [],
          "LIST:UPLOAD_MIME_TYPES": []
        },
        "if": {
          "IF:NAV_TRANSITIONS": false,
          "IF:BUILD_SUMMARY": false,
          "IF:NATIVE_SPLITS": false,
          "IF:AFTER_BUILD": false,
          "IF:PRE_COMMIT": false,
          "IF:AFTER_INSTALL": false,
          "IF:BEFORE_BUILD": false,
          "IF:POST_INJECT": false,
          "IF:BEFORE_BUNDLE": false,
          "IF:AFTER_BUNDLE": false,
          "IF:ENABLE_POSTING": true,
          "IF:ENABLE_COMMENTS": true,
          "IF:ENABLE_LIKES": true,
          "IF:REQUIRE_LOGIN": true,
          "IF:SHOW_NOTIFICATIONS": true
        },
        "gradle": {
          "applicationId": "com.social.circleapp",
          "resConfigs": [
            "en",
            "zh-rCN"
          ],
          "permissions": [
            "android.permission.INTERNET",
            "android.permission.ACCESS_NETWORK_STATE"
          ]
        },
        "block": {
          "BLOCK:HOME_HEADER": "@Composable fun HomeHeader(){ TopAppBar(title = { Text(\\\"Circle\\\") }, navigationIcon = { IconButton(onClick = { /*TODO*/ }) { Icon(Icons.Default.Menu, contentDescription = null) } }) }",
          "BLOCK:HOME_BODY": "@Composable fun HomeBody(posts: List<Post>){ LazyColumn{ items(posts){ post -> PostCard(post) } } }",
          "BLOCK:HOME_ACTIONS": "@Composable fun HomeActions(onPostClick: ()->Unit){ Row{ Spacer(Modifier.weight(1f)); Button(onClick = onPostClick){ Text(\\\"Post\\\") } } }",
          "BLOCK:SPLASH_CONTENT": "@Composable fun SplashScreen(){ Box(Modifier.fillMaxSize(), contentAlignment = Alignment.Center){ Image(painterResource(R.drawable.splash), contentDescription = null) } }",
          "BLOCK:EMPTY_STATE": "@Composable fun EmptyState(){ Column(Modifier.fillMaxSize(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center){ Icon(Icons.Default.Inbox, contentDescription = null); Text(\\\"No posts yet\\\") } }",
          "BLOCK:ERROR_STATE": "@Composable fun ErrorState(message: String, onRetry: ()->Unit){ Column(Modifier.fillMaxSize(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center){ Text(message, color = Color.Red); Button(onClick = onRetry){ Text(\\\"Retry\\\") } } }",
          "BLOCK:DEBUG_PANEL": "@Composable fun DebugPanel(info: String){ Box(Modifier.fillMaxWidth().background(Color.LightGray).padding(8.dp)){ Text(info, style = MaterialTheme.typography.caption) } }",
          "BLOCK:HEADER_AD_SLOT": "@Composable fun HeaderAd(){ Box(Modifier.height(50.dp).fillMaxWidth().background(Color.Gray)){ Text(\\\"Ad\\\", Modifier.align(Alignment.Center)) } }",
          "BLOCK:USER_PROFILE_CARD": "@Composable fun UserProfileCard(user: User){ Card{ Column(Modifier.padding(16.dp)){ Text(user.name, style = MaterialTheme.typography.h6); Text(user.bio, style = MaterialTheme.typography.body2) } } }",
          "BLOCK:SPONSORED_CARD": "@Composable fun SponsoredCard(ad: Ad){ Card{ Column{ Image(painterResource(ad.imageRes), contentDescription = null); Text(ad.title); Text(ad.description) } } }",
          "BLOCK:PROFILE_SECTION": "@Composable fun ProfileSection(user: User){ Column{ UserProfileCard(user); Divider(); // other sections } }",
          "BLOCK:SETTINGS_SECTION": "@Composable fun SettingsSection(settings: List<Setting>){ Column{ settings.forEach{ SettingItem(it) } } }",
          "BLOCK:SETTINGS_SECTION:EXTRA": "@Composable fun SettingsExtra(extraInfo: String){ Text(extraInfo, style = MaterialTheme.typography.body2) }",
          "BLOCK:POST_COMPOSER": "@Composable fun PostComposer(onPost: (String)->Unit){ var text by remember { mutableStateOf(\\\"\\\") }; Column{ TextField(value = text, onValueChange = { text = it }, label = { Text(\\\"Write something...\\\") }); Button(onClick = { onPost(text) }){ Text(\\\"Post\\\") } } }",
          "BLOCK:POST_CARD": "@Composable fun PostCard(post: Post){ Card{ Column(Modifier.padding(8.dp)){ Text(post.author, style = MaterialTheme.typography.subtitle2); Text(post.content); if(post.imageUrl != null){ Image(painterResource(post.imageUrl), contentDescription = null) } LikeButton(post) } } }",
          "BLOCK:FEED_LIST": "@Composable fun FeedList(posts: List<Post>){ LazyColumn{ items(posts){ post -> PostCard(post) } } }",
          "BLOCK:POST_DETAIL": "@Composable fun PostDetail(post: Post){ Column{ Text(post.title, style = MaterialTheme.typography.h5); Text(post.content); if(post.imageUrl != null){ Image(painterResource(post.imageUrl), contentDescription = null) } CommentsScreen(post.id) } }",
          "BLOCK:COMMENTS_SCREEN": "@Composable fun CommentsScreen(postId: String){ // fetch and display comments }",
          "BLOCK:COMMENT_ITEM": "@Composable fun CommentItem(comment: Comment){ Row{ Text(comment.author); Spacer(Modifier.width(8.dp)); Text(comment.text) } }",
          "BLOCK:LIKE_BUTTON": "@Composable fun LikeButton(post: Post){ var liked by remember { mutableStateOf(post.liked) }; IconButton(onClick = { liked = !liked }){ Icon(if(liked) Icons.Default.Favorite else Icons.Default.FavoriteBorder, contentDescription = null) } }",
          "BLOCK:NOTIFICATIONS_SCREEN": "@Composable fun NotificationsScreen(notifications: List<Notification>){ LazyColumn{ items(notifications){ n -> NotificationItem(n) } } }",
          "BLOCK:EDIT_PROFILE_SCREEN": "@Composable fun EditProfileScreen(user: User, onSave: (User)->Unit){ // UI for editing profile }",
          "BLOCK:SEARCH_SCREEN": "@Composable fun SearchScreen(onSearch: (String)->Unit){ var query by remember { mutableStateOf(\\\"\\\") }; Column{ TextField(value = query, onValueChange = { query = it }, label = { Text(\\\"Search\\\") }); Button(onClick = { onSearch(query) }){ Text(\\\"Go\\\") } } }",
          "BLOCK:MEDIA_PICKER": "@Composable fun MediaPicker(onMediaSelected: (Uri)->Unit){ // UI to pick images or videos }"
        },
        "hook": {
          "HOOK:INTENT_SHARE": "noop",
          "HOOK:FILE_PROVIDER": "noop",
          "HOOK:PERMISSIONS:ON_REQUEST": "noop",
          "HOOK:PRE_COMMIT:HOOK": "noop",
          "HOOK:POST_BUILD:HOOK": "noop",
          "HOOK:AFTER_INSTALL:HOOK": "noop",
          "HOOK:POST_SUBMIT": "noop",
          "HOOK:FETCH_FEED": "noop",
          "HOOK:FETCH_POST": "noop",
          "HOOK:FETCH_COMMENTS": "noop",
          "HOOK:COMMENT_SUBMIT": "noop",
          "HOOK:LIKE_TOGGLE": "noop",
          "HOOK:UPLOAD_MEDIA": "noop",
          "HOOK:FETCH_NOTIFICATIONS": "noop"
        }
      },
      "files": []
    },
    "issues": []
  },
  "tokens": {
    "phase1_in": 1216,
    "phase1_out": 554,
    "phase2_in": 2224,
    "phase2_out": 1828,
    "total_in": 3440,
    "total_out": 2382,
    "total": 5822
  }
}